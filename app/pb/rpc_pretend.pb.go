// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: rpc_pretend.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MgetPretendsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PretendIds []uint32 `protobuf:"varint,1,rep,packed,name=pretend_ids,json=pretendIds,proto3" json:"pretend_ids,omitempty"`
}

func (x *MgetPretendsReq) Reset() {
	*x = MgetPretendsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_pretend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MgetPretendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MgetPretendsReq) ProtoMessage() {}

func (x *MgetPretendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_pretend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MgetPretendsReq.ProtoReflect.Descriptor instead.
func (*MgetPretendsReq) Descriptor() ([]byte, []int) {
	return file_rpc_pretend_proto_rawDescGZIP(), []int{0}
}

func (x *MgetPretendsReq) GetPretendIds() []uint32 {
	if x != nil {
		return x.PretendIds
	}
	return nil
}

type MgetPretendsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[uint32]*PretendInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MgetPretendsResp) Reset() {
	*x = MgetPretendsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_pretend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MgetPretendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MgetPretendsResp) ProtoMessage() {}

func (x *MgetPretendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_pretend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MgetPretendsResp.ProtoReflect.Descriptor instead.
func (*MgetPretendsResp) Descriptor() ([]byte, []int) {
	return file_rpc_pretend_proto_rawDescGZIP(), []int{1}
}

func (x *MgetPretendsResp) GetData() map[uint32]*PretendInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type Mp4Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                         //mp4的播放url
	VapSize uint32 `protobuf:"varint,2,opt,name=vap_size,json=vapSize,proto3" json:"vap_size,omitempty"` //资源大小
}

func (x *Mp4Source) Reset() {
	*x = Mp4Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_pretend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mp4Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mp4Source) ProtoMessage() {}

func (x *Mp4Source) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_pretend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mp4Source.ProtoReflect.Descriptor instead.
func (*Mp4Source) Descriptor() ([]byte, []int) {
	return file_rpc_pretend_proto_rawDescGZIP(), []int{2}
}

func (x *Mp4Source) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Mp4Source) GetVapSize() uint32 {
	if x != nil {
		return x.VapSize
	}
	return 0
}

type PretendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex           uint32     `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	StarNum       uint32     `protobuf:"varint,5,opt,name=star_num,json=starNum,proto3" json:"star_num,omitempty"`
	UrlSource     string     `protobuf:"bytes,6,opt,name=url_source,json=urlSource,proto3" json:"url_source,omitempty"`
	PreviewSource string     `protobuf:"bytes,7,opt,name=preview_source,json=previewSource,proto3" json:"preview_source,omitempty"` //预览资源
	Desc          string     `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	VapSize       uint32     `protobuf:"varint,10,opt,name=vap_size,json=vapSize,proto3" json:"vap_size,omitempty"`
	IsLock        bool       `protobuf:"varint,11,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`         //是否锁定：true：锁，false：已解锁
	ExtId         uint32     `protobuf:"varint,12,opt,name=ext_id,json=extId,proto3" json:"ext_id,omitempty"`            //gift_id
	FontColor     string     `protobuf:"bytes,13,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"` //入场横幅专用的字体颜色
	CateId        uint32     `protobuf:"varint,14,opt,name=cate_id,json=cateId,proto3" json:"cate_id,omitempty"`
	GroupId       uint32     `protobuf:"varint,15,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Mp4Source     *Mp4Source `protobuf:"bytes,16,opt,name=mp4_source,json=mp4Source,proto3" json:"mp4_source,omitempty"`
	SecondCateId  uint32     `protobuf:"varint,17,opt,name=second_cate_id,json=secondCateId,proto3" json:"second_cate_id,omitempty"`
}

func (x *PretendInfo) Reset() {
	*x = PretendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_pretend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PretendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PretendInfo) ProtoMessage() {}

func (x *PretendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_pretend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PretendInfo.ProtoReflect.Descriptor instead.
func (*PretendInfo) Descriptor() ([]byte, []int) {
	return file_rpc_pretend_proto_rawDescGZIP(), []int{3}
}

func (x *PretendInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PretendInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PretendInfo) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PretendInfo) GetStarNum() uint32 {
	if x != nil {
		return x.StarNum
	}
	return 0
}

func (x *PretendInfo) GetUrlSource() string {
	if x != nil {
		return x.UrlSource
	}
	return ""
}

func (x *PretendInfo) GetPreviewSource() string {
	if x != nil {
		return x.PreviewSource
	}
	return ""
}

func (x *PretendInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PretendInfo) GetVapSize() uint32 {
	if x != nil {
		return x.VapSize
	}
	return 0
}

func (x *PretendInfo) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *PretendInfo) GetExtId() uint32 {
	if x != nil {
		return x.ExtId
	}
	return 0
}

func (x *PretendInfo) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

func (x *PretendInfo) GetCateId() uint32 {
	if x != nil {
		return x.CateId
	}
	return 0
}

func (x *PretendInfo) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PretendInfo) GetMp4Source() *Mp4Source {
	if x != nil {
		return x.Mp4Source
	}
	return nil
}

func (x *PretendInfo) GetSecondCateId() uint32 {
	if x != nil {
		return x.SecondCateId
	}
	return 0
}

var File_rpc_pretend_proto protoreflect.FileDescriptor

var file_rpc_pretend_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x32, 0x0a, 0x0f, 0x4d, 0x67, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10,
	0x4d, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x48, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38,
	0x0a, 0x09, 0x4d, 0x70, 0x34, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xaa, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x65,
	0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x72, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x6d, 0x70, 0x34, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x70, 0x34, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x6d, 0x70, 0x34, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_pretend_proto_rawDescOnce sync.Once
	file_rpc_pretend_proto_rawDescData = file_rpc_pretend_proto_rawDesc
)

func file_rpc_pretend_proto_rawDescGZIP() []byte {
	file_rpc_pretend_proto_rawDescOnce.Do(func() {
		file_rpc_pretend_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_pretend_proto_rawDescData)
	})
	return file_rpc_pretend_proto_rawDescData
}

var file_rpc_pretend_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rpc_pretend_proto_goTypes = []interface{}{
	(*MgetPretendsReq)(nil),  // 0: pb.MgetPretendsReq
	(*MgetPretendsResp)(nil), // 1: pb.MgetPretendsResp
	(*Mp4Source)(nil),        // 2: pb.Mp4Source
	(*PretendInfo)(nil),      // 3: pb.PretendInfo
	nil,                      // 4: pb.MgetPretendsResp.DataEntry
}
var file_rpc_pretend_proto_depIdxs = []int32{
	4, // 0: pb.MgetPretendsResp.data:type_name -> pb.MgetPretendsResp.DataEntry
	2, // 1: pb.PretendInfo.mp4_source:type_name -> pb.Mp4Source
	3, // 2: pb.MgetPretendsResp.DataEntry.value:type_name -> pb.PretendInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_pretend_proto_init() }
func file_rpc_pretend_proto_init() {
	if File_rpc_pretend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_pretend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MgetPretendsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_pretend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MgetPretendsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_pretend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mp4Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_pretend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PretendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_pretend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_pretend_proto_goTypes,
		DependencyIndexes: file_rpc_pretend_proto_depIdxs,
		MessageInfos:      file_rpc_pretend_proto_msgTypes,
	}.Build()
	File_rpc_pretend_proto = out.File
	file_rpc_pretend_proto_rawDesc = nil
	file_rpc_pretend_proto_goTypes = nil
	file_rpc_pretend_proto_depIdxs = nil
}
