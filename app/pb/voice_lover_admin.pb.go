// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: voice_lover_admin.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminVoiceLoverAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime   uint64                      `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	PubUid       uint32                      `protobuf:"varint,3,opt,name=pub_uid,json=pubUid,proto3" json:"pub_uid,omitempty"`
	PubUserName  string                      `protobuf:"bytes,4,opt,name=pub_user_name,json=pubUserName,proto3" json:"pub_user_name,omitempty"`
	Broker       string                      `protobuf:"bytes,5,opt,name=broker,proto3" json:"broker,omitempty"`
	Resource     string                      `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Covers       []string                    `protobuf:"bytes,7,rep,name=covers,proto3" json:"covers,omitempty"`
	Source       int32                       `protobuf:"varint,8,opt,name=source,proto3" json:"source,omitempty"`
	Desc         string                      `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`
	Title        string                      `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Labels       []string                    `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	AuditStatus  int32                       `protobuf:"varint,12,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	OpUid        uint64                      `protobuf:"varint,13,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	EditDubs     []*AdminVoiceLoverAudioEdit `protobuf:"bytes,14,rep,name=edit_dubs,json=editDubs,proto3" json:"edit_dubs,omitempty"`
	EditContents []*AdminVoiceLoverAudioEdit `protobuf:"bytes,15,rep,name=edit_contents,json=editContents,proto3" json:"edit_contents,omitempty"`
	EditPosts    []*AdminVoiceLoverAudioEdit `protobuf:"bytes,16,rep,name=edit_posts,json=editPosts,proto3" json:"edit_posts,omitempty"`
	EditCovers   []*AdminVoiceLoverAudioEdit `protobuf:"bytes,17,rep,name=edit_covers,json=editCovers,proto3" json:"edit_covers,omitempty"`
}

func (x *AdminVoiceLoverAudio) Reset() {
	*x = AdminVoiceLoverAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAudio) ProtoMessage() {}

func (x *AdminVoiceLoverAudio) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAudio.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAudio) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdminVoiceLoverAudio) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetPubUid() uint32 {
	if x != nil {
		return x.PubUid
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetPubUserName() string {
	if x != nil {
		return x.PubUserName
	}
	return ""
}

func (x *AdminVoiceLoverAudio) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *AdminVoiceLoverAudio) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AdminVoiceLoverAudio) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *AdminVoiceLoverAudio) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AdminVoiceLoverAudio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminVoiceLoverAudio) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AdminVoiceLoverAudio) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *AdminVoiceLoverAudio) GetEditDubs() []*AdminVoiceLoverAudioEdit {
	if x != nil {
		return x.EditDubs
	}
	return nil
}

func (x *AdminVoiceLoverAudio) GetEditContents() []*AdminVoiceLoverAudioEdit {
	if x != nil {
		return x.EditContents
	}
	return nil
}

func (x *AdminVoiceLoverAudio) GetEditPosts() []*AdminVoiceLoverAudioEdit {
	if x != nil {
		return x.EditPosts
	}
	return nil
}

func (x *AdminVoiceLoverAudio) GetEditCovers() []*AdminVoiceLoverAudioEdit {
	if x != nil {
		return x.EditCovers
	}
	return nil
}

type AdminVoiceLoverAudioEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *AdminVoiceLoverAudioEdit) Reset() {
	*x = AdminVoiceLoverAudioEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAudioEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAudioEdit) ProtoMessage() {}

func (x *AdminVoiceLoverAudioEdit) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAudioEdit.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAudioEdit) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminVoiceLoverAudioEdit) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AdminVoiceLoverAudioEdit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminVoiceLoverAudioEdit) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type RespAdminVoiceLoverAudioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Audios  []*AdminVoiceLoverAudio `protobuf:"bytes,3,rep,name=audios,proto3" json:"audios,omitempty"`
	Total   int32                   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminVoiceLoverAudioList) Reset() {
	*x = RespAdminVoiceLoverAudioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioList) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{2}
}

func (x *RespAdminVoiceLoverAudioList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAudioList) GetAudios() []*AdminVoiceLoverAudio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *RespAdminVoiceLoverAudioList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RespAdminVoiceLoverAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Audio   *AdminVoiceLoverAudio `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *RespAdminVoiceLoverAudioDetail) Reset() {
	*x = RespAdminVoiceLoverAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioDetail) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioDetail.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{3}
}

func (x *RespAdminVoiceLoverAudioDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAudioDetail) GetAudio() *AdminVoiceLoverAudio {
	if x != nil {
		return x.Audio
	}
	return nil
}

type RespAdminVoiceLoverAudioAuditReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                               `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Reasons []*AdminVoiceLoverAudioAuditReason `protobuf:"bytes,3,rep,name=reasons,proto3" json:"reasons,omitempty"`
}

func (x *RespAdminVoiceLoverAudioAuditReason) Reset() {
	*x = RespAdminVoiceLoverAudioAuditReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioAuditReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioAuditReason) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioAuditReason) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioAuditReason.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioAuditReason) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{4}
}

func (x *RespAdminVoiceLoverAudioAuditReason) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioAuditReason) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAudioAuditReason) GetReasons() []*AdminVoiceLoverAudioAuditReason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type AdminVoiceLoverAudioAuditReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AdminVoiceLoverAudioAuditReason) Reset() {
	*x = AdminVoiceLoverAudioAuditReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAudioAuditReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAudioAuditReason) ProtoMessage() {}

func (x *AdminVoiceLoverAudioAuditReason) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAudioAuditReason.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAudioAuditReason) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{5}
}

func (x *AdminVoiceLoverAudioAuditReason) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAudioAuditReason) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RespAdminVoiceLoverAlbumCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id      uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumCreate) Reset() {
	*x = RespAdminVoiceLoverAlbumCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumCreate) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumCreate) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumCreate.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumCreate) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{6}
}

func (x *RespAdminVoiceLoverAlbumCreate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumCreate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAlbumCreate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdminVoiceLoverAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Intro      string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover      string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid      uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	AudioCount int32  `protobuf:"varint,6,opt,name=audio_count,json=audioCount,proto3" json:"audio_count,omitempty"`
	CreateTime uint64 `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *AdminVoiceLoverAlbum) Reset() {
	*x = AdminVoiceLoverAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAlbum) ProtoMessage() {}

func (x *AdminVoiceLoverAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAlbum.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAlbum) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdminVoiceLoverAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminVoiceLoverAlbum) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *AdminVoiceLoverAlbum) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdminVoiceLoverAlbum) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *AdminVoiceLoverAlbum) GetAudioCount() int32 {
	if x != nil {
		return x.AudioCount
	}
	return 0
}

func (x *AdminVoiceLoverAlbum) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RespAdminVoiceLoverAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Album   *AdminVoiceLoverAlbum `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumDetail) Reset() {
	*x = RespAdminVoiceLoverAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumDetail) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumDetail.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{8}
}

func (x *RespAdminVoiceLoverAlbumDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAlbumDetail) GetAlbum() *AdminVoiceLoverAlbum {
	if x != nil {
		return x.Album
	}
	return nil
}

type RespAdminVoiceLoverAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Albums  []*AdminVoiceLoverAlbum `protobuf:"bytes,3,rep,name=albums,proto3" json:"albums,omitempty"`
	Total   int32                   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumList) Reset() {
	*x = RespAdminVoiceLoverAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumList) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{9}
}

func (x *RespAdminVoiceLoverAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAlbumList) GetAlbums() []*AdminVoiceLoverAlbum {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *RespAdminVoiceLoverAlbumList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminVoiceLoverAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                              `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Labels      []string                            `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	PubUid      uint32                              `protobuf:"varint,4,opt,name=pub_uid,json=pubUid,proto3" json:"pub_uid,omitempty"`
	PubUserName string                              `protobuf:"bytes,5,opt,name=pub_user_name,json=pubUserName,proto3" json:"pub_user_name,omitempty"`
	Collects    []*AdminVoiceLoverAudioCollectAlbum `protobuf:"bytes,6,rep,name=collects,proto3" json:"collects,omitempty"`
	CreateTime  uint64                              `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *AdminVoiceLoverAudioCollect) Reset() {
	*x = AdminVoiceLoverAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAudioCollect) ProtoMessage() {}

func (x *AdminVoiceLoverAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAudioCollect.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAudioCollect) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{10}
}

func (x *AdminVoiceLoverAudioCollect) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAudioCollect) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminVoiceLoverAudioCollect) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AdminVoiceLoverAudioCollect) GetPubUid() uint32 {
	if x != nil {
		return x.PubUid
	}
	return 0
}

func (x *AdminVoiceLoverAudioCollect) GetPubUserName() string {
	if x != nil {
		return x.PubUserName
	}
	return ""
}

func (x *AdminVoiceLoverAudioCollect) GetCollects() []*AdminVoiceLoverAudioCollectAlbum {
	if x != nil {
		return x.Collects
	}
	return nil
}

func (x *AdminVoiceLoverAudioCollect) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AdminVoiceLoverAudioCollectAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AdminVoiceLoverAudioCollectAlbum) Reset() {
	*x = AdminVoiceLoverAudioCollectAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAudioCollectAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAudioCollectAlbum) ProtoMessage() {}

func (x *AdminVoiceLoverAudioCollectAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAudioCollectAlbum.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAudioCollectAlbum) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{11}
}

func (x *AdminVoiceLoverAudioCollectAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAudioCollectAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RespAdminVoiceLoverAudioCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Audios  []*AdminVoiceLoverAudioCollect `protobuf:"bytes,3,rep,name=audios,proto3" json:"audios,omitempty"`
	Total   int32                          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminVoiceLoverAudioCollectList) Reset() {
	*x = RespAdminVoiceLoverAudioCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioCollectList) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioCollectList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioCollectList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{12}
}

func (x *RespAdminVoiceLoverAudioCollectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioCollectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAudioCollectList) GetAudios() []*AdminVoiceLoverAudioCollect {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *RespAdminVoiceLoverAudioCollectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RespAdminVoiceLoverAudioUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAudioUpdate) Reset() {
	*x = RespAdminVoiceLoverAudioUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioUpdate) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioUpdate.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioUpdate) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{13}
}

func (x *RespAdminVoiceLoverAudioUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAudioAudit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAudioAudit) Reset() {
	*x = RespAdminVoiceLoverAudioAudit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioAudit) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioAudit) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioAudit.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioAudit) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{14}
}

func (x *RespAdminVoiceLoverAudioAudit) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioAudit) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAlbumUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumUpdate) Reset() {
	*x = RespAdminVoiceLoverAlbumUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumUpdate) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumUpdate.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumUpdate) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{15}
}

func (x *RespAdminVoiceLoverAlbumUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAlbumDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumDel) Reset() {
	*x = RespAdminVoiceLoverAlbumDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumDel) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumDel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumDel.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumDel) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{16}
}

func (x *RespAdminVoiceLoverAlbumDel) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumDel) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAudioCollect) Reset() {
	*x = RespAdminVoiceLoverAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAudioCollect) ProtoMessage() {}

func (x *RespAdminVoiceLoverAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAudioCollect.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAudioCollect) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{17}
}

func (x *RespAdminVoiceLoverAudioCollect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAudioCollect) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverSubjectCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id      uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RespAdminVoiceLoverSubjectCreate) Reset() {
	*x = RespAdminVoiceLoverSubjectCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverSubjectCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverSubjectCreate) ProtoMessage() {}

func (x *RespAdminVoiceLoverSubjectCreate) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverSubjectCreate.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverSubjectCreate) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{18}
}

func (x *RespAdminVoiceLoverSubjectCreate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverSubjectCreate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverSubjectCreate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminVoiceLoverSubjectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverSubjectUpdate) Reset() {
	*x = RespAdminVoiceLoverSubjectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverSubjectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverSubjectUpdate) ProtoMessage() {}

func (x *RespAdminVoiceLoverSubjectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverSubjectUpdate.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverSubjectUpdate) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{19}
}

func (x *RespAdminVoiceLoverSubjectUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverSubjectUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverSubjectDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverSubjectDel) Reset() {
	*x = RespAdminVoiceLoverSubjectDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverSubjectDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverSubjectDel) ProtoMessage() {}

func (x *RespAdminVoiceLoverSubjectDel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverSubjectDel.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverSubjectDel) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{20}
}

func (x *RespAdminVoiceLoverSubjectDel) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverSubjectDel) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverSubjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List    []*SubjectData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total   int32          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminVoiceLoverSubjectList) Reset() {
	*x = RespAdminVoiceLoverSubjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverSubjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverSubjectList) ProtoMessage() {}

func (x *RespAdminVoiceLoverSubjectList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverSubjectList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverSubjectList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{21}
}

func (x *RespAdminVoiceLoverSubjectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverSubjectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverSubjectList) GetList() []*SubjectData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RespAdminVoiceLoverSubjectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RespAdminVoiceLoverSubjectDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Subject *SubjectData `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *RespAdminVoiceLoverSubjectDetail) Reset() {
	*x = RespAdminVoiceLoverSubjectDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverSubjectDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverSubjectDetail) ProtoMessage() {}

func (x *RespAdminVoiceLoverSubjectDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverSubjectDetail.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverSubjectDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{22}
}

func (x *RespAdminVoiceLoverSubjectDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverSubjectDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverSubjectDetail) GetSubject() *SubjectData {
	if x != nil {
		return x.Subject
	}
	return nil
}

type RespAdminVoiceLoverAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumCollect) Reset() {
	*x = RespAdminVoiceLoverAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumCollect) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumCollect.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumCollect) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{23}
}

func (x *RespAdminVoiceLoverAlbumCollect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumCollect) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAlbumCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List    []*AdminVoiceLoverAlbumSubject `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total   int32                          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumCollectList) Reset() {
	*x = RespAdminVoiceLoverAlbumCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumCollectList) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumCollectList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumCollectList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{24}
}

func (x *RespAdminVoiceLoverAlbumCollectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumCollectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAlbumCollectList) GetList() []*AdminVoiceLoverAlbumSubject {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RespAdminVoiceLoverAlbumCollectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminVoiceLoverAlbumSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AlbumName   string `protobuf:"bytes,2,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	SubjectName string `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	AlbumId     uint64 `protobuf:"varint,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	SubjectId   uint64 `protobuf:"varint,5,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *AdminVoiceLoverAlbumSubject) Reset() {
	*x = AdminVoiceLoverAlbumSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminVoiceLoverAlbumSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminVoiceLoverAlbumSubject) ProtoMessage() {}

func (x *AdminVoiceLoverAlbumSubject) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminVoiceLoverAlbumSubject.ProtoReflect.Descriptor instead.
func (*AdminVoiceLoverAlbumSubject) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{25}
}

func (x *AdminVoiceLoverAlbumSubject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminVoiceLoverAlbumSubject) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *AdminVoiceLoverAlbumSubject) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *AdminVoiceLoverAlbumSubject) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *AdminVoiceLoverAlbumSubject) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type RespAdminVoiceLoverAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumChoice) Reset() {
	*x = RespAdminVoiceLoverAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumChoice) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumChoice.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumChoice) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{26}
}

func (x *RespAdminVoiceLoverAlbumChoice) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumChoice) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminVoiceLoverAlbumChoiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Albums  []*AdminAlbumData `protobuf:"bytes,3,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *RespAdminVoiceLoverAlbumChoiceList) Reset() {
	*x = RespAdminVoiceLoverAlbumChoiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminVoiceLoverAlbumChoiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminVoiceLoverAlbumChoiceList) ProtoMessage() {}

func (x *RespAdminVoiceLoverAlbumChoiceList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminVoiceLoverAlbumChoiceList.ProtoReflect.Descriptor instead.
func (*RespAdminVoiceLoverAlbumChoiceList) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{27}
}

func (x *RespAdminVoiceLoverAlbumChoiceList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminVoiceLoverAlbumChoiceList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminVoiceLoverAlbumChoiceList) GetAlbums() []*AdminAlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type AdminAlbumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime uint64 `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *AdminAlbumData) Reset() {
	*x = AdminAlbumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAlbumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAlbumData) ProtoMessage() {}

func (x *AdminAlbumData) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAlbumData.ProtoReflect.Descriptor instead.
func (*AdminAlbumData) Descriptor() ([]byte, []int) {
	return file_voice_lover_admin_proto_rawDescGZIP(), []int{28}
}

func (x *AdminAlbumData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAlbumData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminAlbumData) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminAlbumData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

var File_voice_lover_admin_proto protoreflect.FileDescriptor

var file_voice_lover_admin_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x18, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x04, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75,
	0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x75, 0x62, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x44, 0x75, 0x62, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x52, 0x0c,
	0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0a,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x52, 0x09,
	0x65, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x52, 0x0a, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x30, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7c, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x1f, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30,
	0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xfb, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x23, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x4c, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4b, 0x0a,
	0x1d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4c, 0x0a, 0x1e, 0x52, 0x65,
	0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65,
	0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x49, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x4d, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x5e, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x4b, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x87, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x20, 0x52, 0x65, 0x73,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x4d, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x9c, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7c, 0x0a, 0x22,
	0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a,
	0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x0e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_lover_admin_proto_rawDescOnce sync.Once
	file_voice_lover_admin_proto_rawDescData = file_voice_lover_admin_proto_rawDesc
)

func file_voice_lover_admin_proto_rawDescGZIP() []byte {
	file_voice_lover_admin_proto_rawDescOnce.Do(func() {
		file_voice_lover_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_lover_admin_proto_rawDescData)
	})
	return file_voice_lover_admin_proto_rawDescData
}

var file_voice_lover_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_voice_lover_admin_proto_goTypes = []interface{}{
	(*AdminVoiceLoverAudio)(nil),                // 0: pb.AdminVoiceLoverAudio
	(*AdminVoiceLoverAudioEdit)(nil),            // 1: pb.AdminVoiceLoverAudioEdit
	(*RespAdminVoiceLoverAudioList)(nil),        // 2: pb.RespAdminVoiceLoverAudioList
	(*RespAdminVoiceLoverAudioDetail)(nil),      // 3: pb.RespAdminVoiceLoverAudioDetail
	(*RespAdminVoiceLoverAudioAuditReason)(nil), // 4: pb.RespAdminVoiceLoverAudioAuditReason
	(*AdminVoiceLoverAudioAuditReason)(nil),     // 5: pb.AdminVoiceLoverAudioAuditReason
	(*RespAdminVoiceLoverAlbumCreate)(nil),      // 6: pb.RespAdminVoiceLoverAlbumCreate
	(*AdminVoiceLoverAlbum)(nil),                // 7: pb.AdminVoiceLoverAlbum
	(*RespAdminVoiceLoverAlbumDetail)(nil),      // 8: pb.RespAdminVoiceLoverAlbumDetail
	(*RespAdminVoiceLoverAlbumList)(nil),        // 9: pb.RespAdminVoiceLoverAlbumList
	(*AdminVoiceLoverAudioCollect)(nil),         // 10: pb.AdminVoiceLoverAudioCollect
	(*AdminVoiceLoverAudioCollectAlbum)(nil),    // 11: pb.AdminVoiceLoverAudioCollectAlbum
	(*RespAdminVoiceLoverAudioCollectList)(nil), // 12: pb.RespAdminVoiceLoverAudioCollectList
	(*RespAdminVoiceLoverAudioUpdate)(nil),      // 13: pb.RespAdminVoiceLoverAudioUpdate
	(*RespAdminVoiceLoverAudioAudit)(nil),       // 14: pb.RespAdminVoiceLoverAudioAudit
	(*RespAdminVoiceLoverAlbumUpdate)(nil),      // 15: pb.RespAdminVoiceLoverAlbumUpdate
	(*RespAdminVoiceLoverAlbumDel)(nil),         // 16: pb.RespAdminVoiceLoverAlbumDel
	(*RespAdminVoiceLoverAudioCollect)(nil),     // 17: pb.RespAdminVoiceLoverAudioCollect
	(*RespAdminVoiceLoverSubjectCreate)(nil),    // 18: pb.RespAdminVoiceLoverSubjectCreate
	(*RespAdminVoiceLoverSubjectUpdate)(nil),    // 19: pb.RespAdminVoiceLoverSubjectUpdate
	(*RespAdminVoiceLoverSubjectDel)(nil),       // 20: pb.RespAdminVoiceLoverSubjectDel
	(*RespAdminVoiceLoverSubjectList)(nil),      // 21: pb.RespAdminVoiceLoverSubjectList
	(*RespAdminVoiceLoverSubjectDetail)(nil),    // 22: pb.RespAdminVoiceLoverSubjectDetail
	(*RespAdminVoiceLoverAlbumCollect)(nil),     // 23: pb.RespAdminVoiceLoverAlbumCollect
	(*RespAdminVoiceLoverAlbumCollectList)(nil), // 24: pb.RespAdminVoiceLoverAlbumCollectList
	(*AdminVoiceLoverAlbumSubject)(nil),         // 25: pb.AdminVoiceLoverAlbumSubject
	(*RespAdminVoiceLoverAlbumChoice)(nil),      // 26: pb.RespAdminVoiceLoverAlbumChoice
	(*RespAdminVoiceLoverAlbumChoiceList)(nil),  // 27: pb.RespAdminVoiceLoverAlbumChoiceList
	(*AdminAlbumData)(nil),                      // 28: pb.AdminAlbumData
	(*SubjectData)(nil),                         // 29: pb.SubjectData
}
var file_voice_lover_admin_proto_depIdxs = []int32{
	1,  // 0: pb.AdminVoiceLoverAudio.edit_dubs:type_name -> pb.AdminVoiceLoverAudioEdit
	1,  // 1: pb.AdminVoiceLoverAudio.edit_contents:type_name -> pb.AdminVoiceLoverAudioEdit
	1,  // 2: pb.AdminVoiceLoverAudio.edit_posts:type_name -> pb.AdminVoiceLoverAudioEdit
	1,  // 3: pb.AdminVoiceLoverAudio.edit_covers:type_name -> pb.AdminVoiceLoverAudioEdit
	0,  // 4: pb.RespAdminVoiceLoverAudioList.audios:type_name -> pb.AdminVoiceLoverAudio
	0,  // 5: pb.RespAdminVoiceLoverAudioDetail.audio:type_name -> pb.AdminVoiceLoverAudio
	5,  // 6: pb.RespAdminVoiceLoverAudioAuditReason.reasons:type_name -> pb.AdminVoiceLoverAudioAuditReason
	7,  // 7: pb.RespAdminVoiceLoverAlbumDetail.album:type_name -> pb.AdminVoiceLoverAlbum
	7,  // 8: pb.RespAdminVoiceLoverAlbumList.albums:type_name -> pb.AdminVoiceLoverAlbum
	11, // 9: pb.AdminVoiceLoverAudioCollect.collects:type_name -> pb.AdminVoiceLoverAudioCollectAlbum
	10, // 10: pb.RespAdminVoiceLoverAudioCollectList.audios:type_name -> pb.AdminVoiceLoverAudioCollect
	29, // 11: pb.RespAdminVoiceLoverSubjectList.list:type_name -> pb.SubjectData
	29, // 12: pb.RespAdminVoiceLoverSubjectDetail.subject:type_name -> pb.SubjectData
	25, // 13: pb.RespAdminVoiceLoverAlbumCollectList.list:type_name -> pb.AdminVoiceLoverAlbumSubject
	28, // 14: pb.RespAdminVoiceLoverAlbumChoiceList.albums:type_name -> pb.AdminAlbumData
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_voice_lover_admin_proto_init() }
func file_voice_lover_admin_proto_init() {
	if File_voice_lover_admin_proto != nil {
		return
	}
	file_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_lover_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAudioEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioAuditReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAudioAuditReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAudioCollectAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioAudit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverSubjectCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverSubjectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverSubjectDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverSubjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverSubjectDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminVoiceLoverAlbumSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAdminVoiceLoverAlbumChoiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAlbumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_lover_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_lover_admin_proto_goTypes,
		DependencyIndexes: file_voice_lover_admin_proto_depIdxs,
		MessageInfos:      file_voice_lover_admin_proto_msgTypes,
	}.Build()
	File_voice_lover_admin_proto = out.File
	file_voice_lover_admin_proto_rawDesc = nil
	file_voice_lover_admin_proto_goTypes = nil
	file_voice_lover_admin_proto_depIdxs = nil
}
