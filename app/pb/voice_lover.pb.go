// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: voice_lover.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoiceLoverMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecAlbums    []*AlbumData   `protobuf:"bytes,1,rep,name=rec_albums,json=recAlbums,proto3" json:"rec_albums,omitempty"`
	RecBanners   []*BannerData  `protobuf:"bytes,2,rep,name=rec_banners,json=recBanners,proto3" json:"rec_banners,omitempty"`
	RecUsers     []*UserData    `protobuf:"bytes,3,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	RecSubjects  []*SubjectData `protobuf:"bytes,4,rep,name=rec_subjects,json=recSubjects,proto3" json:"rec_subjects,omitempty"`
	CommonAlbums []*AlbumData   `protobuf:"bytes,5,rep,name=common_albums,json=commonAlbums,proto3" json:"common_albums,omitempty"`
}

func (x *VoiceLoverMain) Reset() {
	*x = VoiceLoverMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceLoverMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceLoverMain) ProtoMessage() {}

func (x *VoiceLoverMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceLoverMain.ProtoReflect.Descriptor instead.
func (*VoiceLoverMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{0}
}

func (x *VoiceLoverMain) GetRecAlbums() []*AlbumData {
	if x != nil {
		return x.RecAlbums
	}
	return nil
}

func (x *VoiceLoverMain) GetRecBanners() []*BannerData {
	if x != nil {
		return x.RecBanners
	}
	return nil
}

func (x *VoiceLoverMain) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *VoiceLoverMain) GetRecSubjects() []*SubjectData {
	if x != nil {
		return x.RecSubjects
	}
	return nil
}

func (x *VoiceLoverMain) GetCommonAlbums() []*AlbumData {
	if x != nil {
		return x.CommonAlbums
	}
	return nil
}

type RespVoiceLoverMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *VoiceLoverMain `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespVoiceLoverMain) Reset() {
	*x = RespVoiceLoverMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverMain) ProtoMessage() {}

func (x *RespVoiceLoverMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverMain.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{1}
}

func (x *RespVoiceLoverMain) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverMain) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespVoiceLoverMain) GetData() *VoiceLoverMain {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums  []*AlbumData `protobuf:"bytes,3,rep,name=albums,proto3" json:"albums,omitempty"`
	HasMore bool         `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AlbumList) Reset() {
	*x = AlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumList) ProtoMessage() {}

func (x *AlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumList.ProtoReflect.Descriptor instead.
func (*AlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{2}
}

func (x *AlbumList) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *AlbumList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumList) Reset() {
	*x = RespAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumList) ProtoMessage() {}

func (x *RespAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumList.ProtoReflect.Descriptor instead.
func (*RespAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{3}
}

func (x *RespAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumList) GetData() *AlbumList {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecUsers []*UserData `protobuf:"bytes,3,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	HasMore  bool        `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *RecUserList) Reset() {
	*x = RecUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecUserList) ProtoMessage() {}

func (x *RecUserList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecUserList.ProtoReflect.Descriptor instead.
func (*RecUserList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{4}
}

func (x *RecUserList) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *RecUserList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespRecUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *RecUserList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespRecUserList) Reset() {
	*x = RespRecUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespRecUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespRecUserList) ProtoMessage() {}

func (x *RespRecUserList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespRecUserList.ProtoReflect.Descriptor instead.
func (*RespRecUserList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{5}
}

func (x *RespRecUserList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespRecUserList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespRecUserList) GetData() *RecUserList {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album        *AlbumData   `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`                                    // 专辑信息
	IsCollected  bool         `protobuf:"varint,4,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`    // 是否收藏
	CommentCount uint32       `protobuf:"varint,5,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"` // 评论数量
	Audios       []*AudioData `protobuf:"bytes,6,rep,name=audios,proto3" json:"audios,omitempty"`                                  // 音频列表
}

func (x *AlbumDetail) Reset() {
	*x = AlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumDetail) ProtoMessage() {}

func (x *AlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumDetail.ProtoReflect.Descriptor instead.
func (*AlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{6}
}

func (x *AlbumDetail) GetAlbum() *AlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *AlbumDetail) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *AlbumDetail) GetCommentCount() uint32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AlbumDetail) GetAudios() []*AudioData {
	if x != nil {
		return x.Audios
	}
	return nil
}

type RespAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumDetail) Reset() {
	*x = RespAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumDetail) ProtoMessage() {}

func (x *RespAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumDetail.ProtoReflect.Descriptor instead.
func (*RespAlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{7}
}

func (x *RespAlbumDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumDetail) GetData() *AlbumDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentData `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore  bool           `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AlbumComments) Reset() {
	*x = AlbumComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumComments) ProtoMessage() {}

func (x *AlbumComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumComments.ProtoReflect.Descriptor instead.
func (*AlbumComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{8}
}

func (x *AlbumComments) GetComments() []*CommentData {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *AlbumComments) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAlbumComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumComments `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumComments) Reset() {
	*x = RespAlbumComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumComments) ProtoMessage() {}

func (x *RespAlbumComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumComments.ProtoReflect.Descriptor instead.
func (*RespAlbumComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{9}
}

func (x *RespAlbumComments) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumComments) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumComments) GetData() *AlbumComments {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespCommentAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCommentAlbum) Reset() {
	*x = RespCommentAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCommentAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCommentAlbum) ProtoMessage() {}

func (x *RespCommentAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCommentAlbum.ProtoReflect.Descriptor instead.
func (*RespCommentAlbum) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{10}
}

func (x *RespCommentAlbum) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCommentAlbum) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio        *AudioData   `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`                                    // 音频信息
	IsFollow     bool         `protobuf:"varint,4,opt,name=isFollow,proto3" json:"isFollow,omitempty"`                             // 是否已关注
	RoomId       uint32       `protobuf:"varint,5,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                   // 房间id 为0则表示不在房间内
	IsCollected  bool         `protobuf:"varint,6,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`    // 是否收藏
	CommentCount uint32       `protobuf:"varint,7,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"` // 评论数量
	Audios       []*AlbumData `protobuf:"bytes,8,rep,name=audios,proto3" json:"audios,omitempty"`                                  // 音频列表
}

func (x *AudioDetail) Reset() {
	*x = AudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDetail) ProtoMessage() {}

func (x *AudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioDetail.ProtoReflect.Descriptor instead.
func (*AudioDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{11}
}

func (x *AudioDetail) GetAudio() *AudioData {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AudioDetail) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *AudioDetail) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *AudioDetail) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *AudioDetail) GetCommentCount() uint32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AudioDetail) GetAudios() []*AlbumData {
	if x != nil {
		return x.Audios
	}
	return nil
}

type RespAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AudioDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAudioDetail) Reset() {
	*x = RespAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAudioDetail) ProtoMessage() {}

func (x *RespAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAudioDetail.ProtoReflect.Descriptor instead.
func (*RespAudioDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{12}
}

func (x *RespAudioDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAudioDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAudioDetail) GetData() *AudioDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type AudioComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentData `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore  bool           `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AudioComments) Reset() {
	*x = AudioComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioComments) ProtoMessage() {}

func (x *AudioComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioComments.ProtoReflect.Descriptor instead.
func (*AudioComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{13}
}

func (x *AudioComments) GetComments() []*CommentData {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *AudioComments) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAudioComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AudioComments `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAudioComments) Reset() {
	*x = RespAudioComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAudioComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAudioComments) ProtoMessage() {}

func (x *RespAudioComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAudioComments.ProtoReflect.Descriptor instead.
func (*RespAudioComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{14}
}

func (x *RespAudioComments) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAudioComments) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAudioComments) GetData() *AudioComments {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespCommentAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCommentAudio) Reset() {
	*x = RespCommentAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCommentAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCommentAudio) ProtoMessage() {}

func (x *RespCommentAudio) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCommentAudio.ProtoReflect.Descriptor instead.
func (*RespCommentAudio) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{15}
}

func (x *RespCommentAudio) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCommentAudio) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespCollectVoiceLover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCollectVoiceLover) Reset() {
	*x = RespCollectVoiceLover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCollectVoiceLover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCollectVoiceLover) ProtoMessage() {}

func (x *RespCollectVoiceLover) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCollectVoiceLover.ProtoReflect.Descriptor instead.
func (*RespCollectVoiceLover) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{16}
}

func (x *RespCollectVoiceLover) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCollectVoiceLover) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespVoiceLoverPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespVoiceLoverPost) Reset() {
	*x = RespVoiceLoverPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverPost) ProtoMessage() {}

func (x *RespVoiceLoverPost) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverPost.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverPost) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{17}
}

func (x *RespVoiceLoverPost) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverPost) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespPlayStatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespPlayStatReport) Reset() {
	*x = RespPlayStatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespPlayStatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespPlayStatReport) ProtoMessage() {}

func (x *RespPlayStatReport) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespPlayStatReport.ProtoReflect.Descriptor instead.
func (*RespPlayStatReport) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{18}
}

func (x *RespPlayStatReport) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespPlayStatReport) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_voice_lover_proto protoreflect.FileDescriptor

var file_voice_lover_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x82, 0x02, 0x0a, 0x0e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61,
	0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x5e, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x22, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x0f, 0x52, 0x65,
	0x73, 0x70, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57,
	0x0a, 0x0d, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xd6, 0x01, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x23, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0d,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x43, 0x0a,
	0x15, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x50, 0x6c, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x72, 0x62, 0x70, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_lover_proto_rawDescOnce sync.Once
	file_voice_lover_proto_rawDescData = file_voice_lover_proto_rawDesc
)

func file_voice_lover_proto_rawDescGZIP() []byte {
	file_voice_lover_proto_rawDescOnce.Do(func() {
		file_voice_lover_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_lover_proto_rawDescData)
	})
	return file_voice_lover_proto_rawDescData
}

var file_voice_lover_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_voice_lover_proto_goTypes = []interface{}{
	(*VoiceLoverMain)(nil),        // 0: pb.VoiceLoverMain
	(*RespVoiceLoverMain)(nil),    // 1: pb.RespVoiceLoverMain
	(*AlbumList)(nil),             // 2: pb.AlbumList
	(*RespAlbumList)(nil),         // 3: pb.RespAlbumList
	(*RecUserList)(nil),           // 4: pb.RecUserList
	(*RespRecUserList)(nil),       // 5: pb.RespRecUserList
	(*AlbumDetail)(nil),           // 6: pb.AlbumDetail
	(*RespAlbumDetail)(nil),       // 7: pb.RespAlbumDetail
	(*AlbumComments)(nil),         // 8: pb.AlbumComments
	(*RespAlbumComments)(nil),     // 9: pb.RespAlbumComments
	(*RespCommentAlbum)(nil),      // 10: pb.RespCommentAlbum
	(*AudioDetail)(nil),           // 11: pb.AudioDetail
	(*RespAudioDetail)(nil),       // 12: pb.RespAudioDetail
	(*AudioComments)(nil),         // 13: pb.AudioComments
	(*RespAudioComments)(nil),     // 14: pb.RespAudioComments
	(*RespCommentAudio)(nil),      // 15: pb.RespCommentAudio
	(*RespCollectVoiceLover)(nil), // 16: pb.RespCollectVoiceLover
	(*RespVoiceLoverPost)(nil),    // 17: pb.RespVoiceLoverPost
	(*RespPlayStatReport)(nil),    // 18: pb.RespPlayStatReport
	(*AlbumData)(nil),             // 19: pb.AlbumData
	(*BannerData)(nil),            // 20: pb.BannerData
	(*UserData)(nil),              // 21: pb.UserData
	(*SubjectData)(nil),           // 22: pb.SubjectData
	(*AudioData)(nil),             // 23: pb.AudioData
	(*CommentData)(nil),           // 24: pb.CommentData
}
var file_voice_lover_proto_depIdxs = []int32{
	19, // 0: pb.VoiceLoverMain.rec_albums:type_name -> pb.AlbumData
	20, // 1: pb.VoiceLoverMain.rec_banners:type_name -> pb.BannerData
	21, // 2: pb.VoiceLoverMain.rec_users:type_name -> pb.UserData
	22, // 3: pb.VoiceLoverMain.rec_subjects:type_name -> pb.SubjectData
	19, // 4: pb.VoiceLoverMain.common_albums:type_name -> pb.AlbumData
	0,  // 5: pb.RespVoiceLoverMain.data:type_name -> pb.VoiceLoverMain
	19, // 6: pb.AlbumList.albums:type_name -> pb.AlbumData
	2,  // 7: pb.RespAlbumList.data:type_name -> pb.AlbumList
	21, // 8: pb.RecUserList.rec_users:type_name -> pb.UserData
	4,  // 9: pb.RespRecUserList.data:type_name -> pb.RecUserList
	19, // 10: pb.AlbumDetail.album:type_name -> pb.AlbumData
	23, // 11: pb.AlbumDetail.audios:type_name -> pb.AudioData
	6,  // 12: pb.RespAlbumDetail.data:type_name -> pb.AlbumDetail
	24, // 13: pb.AlbumComments.comments:type_name -> pb.CommentData
	8,  // 14: pb.RespAlbumComments.data:type_name -> pb.AlbumComments
	23, // 15: pb.AudioDetail.audio:type_name -> pb.AudioData
	19, // 16: pb.AudioDetail.audios:type_name -> pb.AlbumData
	11, // 17: pb.RespAudioDetail.data:type_name -> pb.AudioDetail
	24, // 18: pb.AudioComments.comments:type_name -> pb.CommentData
	13, // 19: pb.RespAudioComments.data:type_name -> pb.AudioComments
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_voice_lover_proto_init() }
func file_voice_lover_proto_init() {
	if File_voice_lover_proto != nil {
		return
	}
	file_common_proto_init()
	file_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_lover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceLoverMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespRecUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCommentAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAudioComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCommentAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCollectVoiceLover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespPlayStatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_lover_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_lover_proto_goTypes,
		DependencyIndexes: file_voice_lover_proto_depIdxs,
		MessageInfos:      file_voice_lover_proto_msgTypes,
	}.Build()
	File_voice_lover_proto = out.File
	file_voice_lover_proto_rawDesc = nil
	file_voice_lover_proto_goTypes = nil
	file_voice_lover_proto_depIdxs = nil
}
