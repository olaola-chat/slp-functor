// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: voice_lover.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [url] /go/func/voice_lover/main
// [desc] 首页
// [params] 无
type RespVoiceLoverMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg          string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RecAlbums    []*AlbumData   `protobuf:"bytes,3,rep,name=rec_albums,json=recAlbums,proto3" json:"rec_albums,omitempty"`
	RecBanners   []*BannerData  `protobuf:"bytes,4,rep,name=rec_banners,json=recBanners,proto3" json:"rec_banners,omitempty"`
	RecUsers     []*UserData    `protobuf:"bytes,5,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	RecSubjects  []*SubjectData `protobuf:"bytes,6,rep,name=rec_subjects,json=recSubjects,proto3" json:"rec_subjects,omitempty"`
	CommonAlbums []*AlbumData   `protobuf:"bytes,7,rep,name=common_albums,json=commonAlbums,proto3" json:"common_albums,omitempty"`
}

func (x *RespVoiceLoverMain) Reset() {
	*x = RespVoiceLoverMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverMain) ProtoMessage() {}

func (x *RespVoiceLoverMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverMain.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{0}
}

func (x *RespVoiceLoverMain) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverMain) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespVoiceLoverMain) GetRecAlbums() []*AlbumData {
	if x != nil {
		return x.RecAlbums
	}
	return nil
}

func (x *RespVoiceLoverMain) GetRecBanners() []*BannerData {
	if x != nil {
		return x.RecBanners
	}
	return nil
}

func (x *RespVoiceLoverMain) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *RespVoiceLoverMain) GetRecSubjects() []*SubjectData {
	if x != nil {
		return x.RecSubjects
	}
	return nil
}

func (x *RespVoiceLoverMain) GetCommonAlbums() []*AlbumData {
	if x != nil {
		return x.CommonAlbums
	}
	return nil
}

// [url] /go/func/voice_lover/albumList
// [desc] 获取更多专辑列表 精选&非精选&专题都走该接口
// [params]
//
//	 Choice    uint32 `v:"choice@required"` // 0-默认 1-精选 2-专题
//		SubjectId uint64 `v:"subject_id"`      // Choice=2的时候，需要传专题id
//	 Page  uint32 `v:"page@integer"`
//	 Limit uint32 `v:"limit@integer|min:10|max:50"`
type RespAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg       string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RecAlbums []*AlbumData `protobuf:"bytes,3,rep,name=rec_albums,json=recAlbums,proto3" json:"rec_albums,omitempty"`
	HasMore   bool         `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *RespAlbumList) Reset() {
	*x = RespAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumList) ProtoMessage() {}

func (x *RespAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumList.ProtoReflect.Descriptor instead.
func (*RespAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{1}
}

func (x *RespAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumList) GetRecAlbums() []*AlbumData {
	if x != nil {
		return x.RecAlbums
	}
	return nil
}

func (x *RespAlbumList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// [url] /go/func/voice_lover/recUserList
// [desc] 更多推荐用户列表
// [params]
//
//	Page  uint32 `v:"page@integer"`
//	Limit uint32 `v:"limit@integer|min:10|max:50"`
type RespRecUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg      string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RecUsers []*UserData `protobuf:"bytes,3,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	HasMore  bool        `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *RespRecUserList) Reset() {
	*x = RespRecUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespRecUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespRecUserList) ProtoMessage() {}

func (x *RespRecUserList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespRecUserList.ProtoReflect.Descriptor instead.
func (*RespRecUserList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{2}
}

func (x *RespRecUserList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespRecUserList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespRecUserList) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *RespRecUserList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// [url] /go/func/voice_lover/albumDetail
// [desc] 查看专辑详情
// [params]
//
//	AlbumId uint32 `v:"album_id@required"` // 专辑id
type RespAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg          string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Album        *AlbumData   `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`                                    // 专辑信息
	IsCollected  bool         `protobuf:"varint,4,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`    // 是否收藏
	CommentCount uint32       `protobuf:"varint,5,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"` // 评论数量
	Audios       []*AudioData `protobuf:"bytes,6,rep,name=audios,proto3" json:"audios,omitempty"`                                  // 音频列表
}

func (x *RespAlbumDetail) Reset() {
	*x = RespAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumDetail) ProtoMessage() {}

func (x *RespAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumDetail.ProtoReflect.Descriptor instead.
func (*RespAlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{3}
}

func (x *RespAlbumDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumDetail) GetAlbum() *AlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *RespAlbumDetail) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *RespAlbumDetail) GetCommentCount() uint32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *RespAlbumDetail) GetAudios() []*AudioData {
	if x != nil {
		return x.Audios
	}
	return nil
}

// [url] /go/func/voice_lover/albumComments
// [desc] 查看专辑评论列表
// [params]
//
//	AlbumId uint32 `v:"album_id@required"` // 专辑id
type RespAlbumComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg      string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Comments []*CommentData `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore  bool           `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *RespAlbumComments) Reset() {
	*x = RespAlbumComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumComments) ProtoMessage() {}

func (x *RespAlbumComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumComments.ProtoReflect.Descriptor instead.
func (*RespAlbumComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{4}
}

func (x *RespAlbumComments) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumComments) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumComments) GetComments() []*CommentData {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *RespAlbumComments) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// [url] /go/func/voice_lover/commentAlbum
// [desc] 发表专辑评论
// [params]
//
//	 AlbumId uint64 `v:"album_id@required"` // 专辑id
//		Comment string `v:"comment@required"` // 评论内容
type RespCommentAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCommentAlbum) Reset() {
	*x = RespCommentAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCommentAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCommentAlbum) ProtoMessage() {}

func (x *RespCommentAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCommentAlbum.ProtoReflect.Descriptor instead.
func (*RespCommentAlbum) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{5}
}

func (x *RespCommentAlbum) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCommentAlbum) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// [url] /go/func/voice_lover/post
// [desc] 上传音频资源
// [params]
//
//	Resource    string //音频资源
//	Seconds     uint32 //音频时长 单位秒
//	Title       string //标题
//	Source      int32  //来源 1:原创 2:搬运
//	Cover       string //封面
//	Desc        string //简介
//	EditDub     string // 编辑配音
//	EditContent string //编辑文案
//	EditPost    string //编辑后期
//	EditCover   string //编辑封面
//	Labels      string //标签
type RespVoiceLoverPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespVoiceLoverPost) Reset() {
	*x = RespVoiceLoverPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverPost) ProtoMessage() {}

func (x *RespVoiceLoverPost) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverPost.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverPost) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{6}
}

func (x *RespVoiceLoverPost) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverPost) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_voice_lover_proto protoreflect.FileDescriptor

var file_voice_lover_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb2, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76,
	0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22,
	0x3e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_lover_proto_rawDescOnce sync.Once
	file_voice_lover_proto_rawDescData = file_voice_lover_proto_rawDesc
)

func file_voice_lover_proto_rawDescGZIP() []byte {
	file_voice_lover_proto_rawDescOnce.Do(func() {
		file_voice_lover_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_lover_proto_rawDescData)
	})
	return file_voice_lover_proto_rawDescData
}

var file_voice_lover_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_voice_lover_proto_goTypes = []interface{}{
	(*RespVoiceLoverMain)(nil), // 0: pb.RespVoiceLoverMain
	(*RespAlbumList)(nil),      // 1: pb.RespAlbumList
	(*RespRecUserList)(nil),    // 2: pb.RespRecUserList
	(*RespAlbumDetail)(nil),    // 3: pb.RespAlbumDetail
	(*RespAlbumComments)(nil),  // 4: pb.RespAlbumComments
	(*RespCommentAlbum)(nil),   // 5: pb.RespCommentAlbum
	(*RespVoiceLoverPost)(nil), // 6: pb.RespVoiceLoverPost
	(*AlbumData)(nil),          // 7: pb.AlbumData
	(*BannerData)(nil),         // 8: pb.BannerData
	(*UserData)(nil),           // 9: pb.UserData
	(*SubjectData)(nil),        // 10: pb.SubjectData
	(*AudioData)(nil),          // 11: pb.AudioData
	(*CommentData)(nil),        // 12: pb.CommentData
}
var file_voice_lover_proto_depIdxs = []int32{
	7,  // 0: pb.RespVoiceLoverMain.rec_albums:type_name -> pb.AlbumData
	8,  // 1: pb.RespVoiceLoverMain.rec_banners:type_name -> pb.BannerData
	9,  // 2: pb.RespVoiceLoverMain.rec_users:type_name -> pb.UserData
	10, // 3: pb.RespVoiceLoverMain.rec_subjects:type_name -> pb.SubjectData
	7,  // 4: pb.RespVoiceLoverMain.common_albums:type_name -> pb.AlbumData
	7,  // 5: pb.RespAlbumList.rec_albums:type_name -> pb.AlbumData
	9,  // 6: pb.RespRecUserList.rec_users:type_name -> pb.UserData
	7,  // 7: pb.RespAlbumDetail.album:type_name -> pb.AlbumData
	11, // 8: pb.RespAlbumDetail.audios:type_name -> pb.AudioData
	12, // 9: pb.RespAlbumComments.comments:type_name -> pb.CommentData
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_voice_lover_proto_init() }
func file_voice_lover_proto_init() {
	if File_voice_lover_proto != nil {
		return
	}
	file_common_proto_init()
	file_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_lover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespRecUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCommentAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_lover_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_lover_proto_goTypes,
		DependencyIndexes: file_voice_lover_proto_depIdxs,
		MessageInfos:      file_voice_lover_proto_msgTypes,
	}.Build()
	File_voice_lover_proto = out.File
	file_voice_lover_proto_rawDesc = nil
	file_voice_lover_proto_goTypes = nil
	file_voice_lover_proto_depIdxs = nil
}
