// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: voice_lover.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoiceLoverMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecAlbums    []*AlbumData   `protobuf:"bytes,1,rep,name=rec_albums,json=recAlbums,proto3" json:"rec_albums,omitempty"`
	RecBanners   []*BannerData  `protobuf:"bytes,2,rep,name=rec_banners,json=recBanners,proto3" json:"rec_banners,omitempty"`
	RecUsers     []*UserData    `protobuf:"bytes,3,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	RecSubjects  []*SubjectData `protobuf:"bytes,4,rep,name=rec_subjects,json=recSubjects,proto3" json:"rec_subjects,omitempty"`
	CommonAlbums []*AlbumData   `protobuf:"bytes,5,rep,name=common_albums,json=commonAlbums,proto3" json:"common_albums,omitempty"`
	IsAnchor     bool           `protobuf:"varint,6,opt,name=is_anchor,json=isAnchor,proto3" json:"is_anchor,omitempty"`
	Audios       []*AudioData   `protobuf:"bytes,7,rep,name=audios,proto3" json:"audios,omitempty"` // 全区动态
}

func (x *VoiceLoverMain) Reset() {
	*x = VoiceLoverMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceLoverMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceLoverMain) ProtoMessage() {}

func (x *VoiceLoverMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceLoverMain.ProtoReflect.Descriptor instead.
func (*VoiceLoverMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{0}
}

func (x *VoiceLoverMain) GetRecAlbums() []*AlbumData {
	if x != nil {
		return x.RecAlbums
	}
	return nil
}

func (x *VoiceLoverMain) GetRecBanners() []*BannerData {
	if x != nil {
		return x.RecBanners
	}
	return nil
}

func (x *VoiceLoverMain) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *VoiceLoverMain) GetRecSubjects() []*SubjectData {
	if x != nil {
		return x.RecSubjects
	}
	return nil
}

func (x *VoiceLoverMain) GetCommonAlbums() []*AlbumData {
	if x != nil {
		return x.CommonAlbums
	}
	return nil
}

func (x *VoiceLoverMain) GetIsAnchor() bool {
	if x != nil {
		return x.IsAnchor
	}
	return false
}

func (x *VoiceLoverMain) GetAudios() []*AudioData {
	if x != nil {
		return x.Audios
	}
	return nil
}

type RespVoiceLoverMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *VoiceLoverMain `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespVoiceLoverMain) Reset() {
	*x = RespVoiceLoverMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverMain) ProtoMessage() {}

func (x *RespVoiceLoverMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverMain.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{1}
}

func (x *RespVoiceLoverMain) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverMain) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespVoiceLoverMain) GetData() *VoiceLoverMain {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums  []*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	HasMore bool         `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AlbumList) Reset() {
	*x = AlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumList) ProtoMessage() {}

func (x *AlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumList.ProtoReflect.Descriptor instead.
func (*AlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{2}
}

func (x *AlbumList) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *AlbumList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumList) Reset() {
	*x = RespAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumList) ProtoMessage() {}

func (x *RespAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumList.ProtoReflect.Descriptor instead.
func (*RespAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{3}
}

func (x *RespAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumList) GetData() *AlbumList {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecUsers []*UserData `protobuf:"bytes,1,rep,name=rec_users,json=recUsers,proto3" json:"rec_users,omitempty"`
	HasMore  bool        `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *RecUserList) Reset() {
	*x = RecUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecUserList) ProtoMessage() {}

func (x *RecUserList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecUserList.ProtoReflect.Descriptor instead.
func (*RecUserList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{4}
}

func (x *RecUserList) GetRecUsers() []*UserData {
	if x != nil {
		return x.RecUsers
	}
	return nil
}

func (x *RecUserList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespRecUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *RecUserList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespRecUserList) Reset() {
	*x = RespRecUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespRecUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespRecUserList) ProtoMessage() {}

func (x *RespRecUserList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespRecUserList.ProtoReflect.Descriptor instead.
func (*RespRecUserList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{5}
}

func (x *RespRecUserList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespRecUserList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespRecUserList) GetData() *RecUserList {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album            *AlbumData   `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`                                                 // 专辑信息
	IsCollected      bool         `protobuf:"varint,2,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`                 // 是否收藏
	CommentCountDesc string       `protobuf:"bytes,3,opt,name=comment_count_desc,json=commentCountDesc,proto3" json:"comment_count_desc,omitempty"` // 评论数量
	Audios           []*AudioData `protobuf:"bytes,4,rep,name=audios,proto3" json:"audios,omitempty"`                                               // 音频列表
}

func (x *AlbumDetail) Reset() {
	*x = AlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumDetail) ProtoMessage() {}

func (x *AlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumDetail.ProtoReflect.Descriptor instead.
func (*AlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{6}
}

func (x *AlbumDetail) GetAlbum() *AlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *AlbumDetail) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *AlbumDetail) GetCommentCountDesc() string {
	if x != nil {
		return x.CommentCountDesc
	}
	return ""
}

func (x *AlbumDetail) GetAudios() []*AudioData {
	if x != nil {
		return x.Audios
	}
	return nil
}

type RespAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumDetail) Reset() {
	*x = RespAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumDetail) ProtoMessage() {}

func (x *RespAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumDetail.ProtoReflect.Descriptor instead.
func (*RespAlbumDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{7}
}

func (x *RespAlbumDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumDetail) GetData() *AlbumDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlbumComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentData `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore  bool           `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AlbumComments) Reset() {
	*x = AlbumComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumComments) ProtoMessage() {}

func (x *AlbumComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumComments.ProtoReflect.Descriptor instead.
func (*AlbumComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{8}
}

func (x *AlbumComments) GetComments() []*CommentData {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *AlbumComments) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAlbumComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AlbumComments `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAlbumComments) Reset() {
	*x = RespAlbumComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumComments) ProtoMessage() {}

func (x *RespAlbumComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumComments.ProtoReflect.Descriptor instead.
func (*RespAlbumComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{9}
}

func (x *RespAlbumComments) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumComments) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAlbumComments) GetData() *AlbumComments {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespCommentAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCommentAlbum) Reset() {
	*x = RespCommentAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCommentAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCommentAlbum) ProtoMessage() {}

func (x *RespCommentAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCommentAlbum.ProtoReflect.Descriptor instead.
func (*RespCommentAlbum) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{10}
}

func (x *RespCommentAlbum) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCommentAlbum) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio            *AudioData   `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`                                                 // 音频信息
	IsFollow         bool         `protobuf:"varint,2,opt,name=isFollow,proto3" json:"isFollow,omitempty"`                                          // 是否已关注
	RoomId           uint32       `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                // 房间id 为0则表示不在房间内
	IsCollected      bool         `protobuf:"varint,4,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`                 // 是否收藏
	CommentCountDesc string       `protobuf:"bytes,5,opt,name=comment_count_desc,json=commentCountDesc,proto3" json:"comment_count_desc,omitempty"` // 评论数量
	Albums           []*AlbumData `protobuf:"bytes,6,rep,name=albums,proto3" json:"albums,omitempty"`                                               // 专辑列表
}

func (x *AudioDetail) Reset() {
	*x = AudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDetail) ProtoMessage() {}

func (x *AudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioDetail.ProtoReflect.Descriptor instead.
func (*AudioDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{11}
}

func (x *AudioDetail) GetAudio() *AudioData {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AudioDetail) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *AudioDetail) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *AudioDetail) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *AudioDetail) GetCommentCountDesc() string {
	if x != nil {
		return x.CommentCountDesc
	}
	return ""
}

func (x *AudioDetail) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type RespAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AudioDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAudioDetail) Reset() {
	*x = RespAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAudioDetail) ProtoMessage() {}

func (x *RespAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAudioDetail.ProtoReflect.Descriptor instead.
func (*RespAudioDetail) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{12}
}

func (x *RespAudioDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAudioDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAudioDetail) GetData() *AudioDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type AudioComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentData `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore  bool           `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *AudioComments) Reset() {
	*x = AudioComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioComments) ProtoMessage() {}

func (x *AudioComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioComments.ProtoReflect.Descriptor instead.
func (*AudioComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{13}
}

func (x *AudioComments) GetComments() []*CommentData {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *AudioComments) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespAudioComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AudioComments `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespAudioComments) Reset() {
	*x = RespAudioComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAudioComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAudioComments) ProtoMessage() {}

func (x *RespAudioComments) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAudioComments.ProtoReflect.Descriptor instead.
func (*RespAudioComments) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{14}
}

func (x *RespAudioComments) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAudioComments) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAudioComments) GetData() *AudioComments {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespCommentAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCommentAudio) Reset() {
	*x = RespCommentAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCommentAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCommentAudio) ProtoMessage() {}

func (x *RespCommentAudio) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCommentAudio.ProtoReflect.Descriptor instead.
func (*RespCommentAudio) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{15}
}

func (x *RespCommentAudio) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCommentAudio) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespCollectVoiceLover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCollectVoiceLover) Reset() {
	*x = RespCollectVoiceLover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCollectVoiceLover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCollectVoiceLover) ProtoMessage() {}

func (x *RespCollectVoiceLover) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCollectVoiceLover.ProtoReflect.Descriptor instead.
func (*RespCollectVoiceLover) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{16}
}

func (x *RespCollectVoiceLover) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCollectVoiceLover) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CollectAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AlbumData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasMore bool         `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *CollectAlbumList) Reset() {
	*x = CollectAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAlbumList) ProtoMessage() {}

func (x *CollectAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAlbumList.ProtoReflect.Descriptor instead.
func (*CollectAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{17}
}

func (x *CollectAlbumList) GetList() []*AlbumData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CollectAlbumList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespCollectAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *CollectAlbumList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespCollectAlbumList) Reset() {
	*x = RespCollectAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCollectAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCollectAlbumList) ProtoMessage() {}

func (x *RespCollectAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCollectAlbumList.ProtoReflect.Descriptor instead.
func (*RespCollectAlbumList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{18}
}

func (x *RespCollectAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCollectAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespCollectAlbumList) GetData() *CollectAlbumList {
	if x != nil {
		return x.Data
	}
	return nil
}

type CollectAudioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AudioData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasMore bool         `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *CollectAudioList) Reset() {
	*x = CollectAudioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAudioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAudioList) ProtoMessage() {}

func (x *CollectAudioList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAudioList.ProtoReflect.Descriptor instead.
func (*CollectAudioList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{19}
}

func (x *CollectAudioList) GetList() []*AudioData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CollectAudioList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type RespCollectAudioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *CollectAudioList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespCollectAudioList) Reset() {
	*x = RespCollectAudioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCollectAudioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCollectAudioList) ProtoMessage() {}

func (x *RespCollectAudioList) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCollectAudioList.ProtoReflect.Descriptor instead.
func (*RespCollectAudioList) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{20}
}

func (x *RespCollectAudioList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespCollectAudioList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespCollectAudioList) GetData() *CollectAudioList {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespVoiceLoverPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespVoiceLoverPost) Reset() {
	*x = RespVoiceLoverPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverPost) ProtoMessage() {}

func (x *RespVoiceLoverPost) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverPost.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverPost) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{21}
}

func (x *RespVoiceLoverPost) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverPost) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespPlayStatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespPlayStatReport) Reset() {
	*x = RespPlayStatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespPlayStatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespPlayStatReport) ProtoMessage() {}

func (x *RespPlayStatReport) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespPlayStatReport.ProtoReflect.Descriptor instead.
func (*RespPlayStatReport) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{22}
}

func (x *RespPlayStatReport) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespPlayStatReport) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *ShareData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespShareInfo) Reset() {
	*x = RespShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespShareInfo) ProtoMessage() {}

func (x *RespShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespShareInfo.ProtoReflect.Descriptor instead.
func (*RespShareInfo) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{23}
}

func (x *RespShareInfo) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespShareInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespShareInfo) GetData() *ShareData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespVoiceLoverActivityMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *VoiceLoverActivityMain `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespVoiceLoverActivityMain) Reset() {
	*x = RespVoiceLoverActivityMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceLoverActivityMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceLoverActivityMain) ProtoMessage() {}

func (x *RespVoiceLoverActivityMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceLoverActivityMain.ProtoReflect.Descriptor instead.
func (*RespVoiceLoverActivityMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{24}
}

func (x *RespVoiceLoverActivityMain) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceLoverActivityMain) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespVoiceLoverActivityMain) GetData() *VoiceLoverActivityMain {
	if x != nil {
		return x.Data
	}
	return nil
}

type VoiceLoverActivityMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *VoiceLoverActivity      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"` // 活动详情
	Award    *VoiceLoverActivityAward `protobuf:"bytes,2,opt,name=award,proto3" json:"award,omitempty"`       // 奖励详情
}

func (x *VoiceLoverActivityMain) Reset() {
	*x = VoiceLoverActivityMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceLoverActivityMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceLoverActivityMain) ProtoMessage() {}

func (x *VoiceLoverActivityMain) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceLoverActivityMain.ProtoReflect.Descriptor instead.
func (*VoiceLoverActivityMain) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{25}
}

func (x *VoiceLoverActivityMain) GetActivity() *VoiceLoverActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *VoiceLoverActivityMain) GetAward() *VoiceLoverActivityAward {
	if x != nil {
		return x.Award
	}
	return nil
}

type VoiceLoverActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                   // 标题
	Intro       string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`                                   // 介绍
	Cover       string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`                                   // 封面
	StartTime   uint32 `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`         // 开始时间（秒级时间戳）
	EndTime     uint32 `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`               // 结束时间
	RankAwardId uint32 `protobuf:"varint,7,opt,name=rank_award_id,json=rankAwardId,proto3" json:"rank_award_id,omitempty"` // 排行奖励id
	RuleUrl     string `protobuf:"bytes,8,opt,name=rule_url,json=ruleUrl,proto3" json:"rule_url,omitempty"`                // 投稿规则链接
}

func (x *VoiceLoverActivity) Reset() {
	*x = VoiceLoverActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceLoverActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceLoverActivity) ProtoMessage() {}

func (x *VoiceLoverActivity) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceLoverActivity.ProtoReflect.Descriptor instead.
func (*VoiceLoverActivity) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{26}
}

func (x *VoiceLoverActivity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VoiceLoverActivity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VoiceLoverActivity) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *VoiceLoverActivity) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *VoiceLoverActivity) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *VoiceLoverActivity) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *VoiceLoverActivity) GetRankAwardId() uint32 {
	if x != nil {
		return x.RankAwardId
	}
	return 0
}

func (x *VoiceLoverActivity) GetRuleUrl() string {
	if x != nil {
		return x.RuleUrl
	}
	return ""
}

type VoiceLoverActivityAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pretends []*Pretend  `protobuf:"bytes,1,rep,name=pretends,proto3" json:"pretends,omitempty"`
	Ranks    []*RankInfo `protobuf:"bytes,2,rep,name=ranks,proto3" json:"ranks,omitempty"`
}

func (x *VoiceLoverActivityAward) Reset() {
	*x = VoiceLoverActivityAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceLoverActivityAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceLoverActivityAward) ProtoMessage() {}

func (x *VoiceLoverActivityAward) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceLoverActivityAward.ProtoReflect.Descriptor instead.
func (*VoiceLoverActivityAward) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{27}
}

func (x *VoiceLoverActivityAward) GetPretends() []*Pretend {
	if x != nil {
		return x.Pretends
	}
	return nil
}

func (x *VoiceLoverActivityAward) GetRanks() []*RankInfo {
	if x != nil {
		return x.Ranks
	}
	return nil
}

type Pretend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // 装扮id
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 装扮名称
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Pretend) Reset() {
	*x = Pretend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pretend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pretend) ProtoMessage() {}

func (x *Pretend) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pretend.ProtoReflect.Descriptor instead.
func (*Pretend) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{28}
}

func (x *Pretend) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pretend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pretend) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                           // 排行奖励类型 1-单个 2-范围
	Start     uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`                         // 开始名次
	End       uint32 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`                             // 结束名次
	Days      uint32 `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`                           // 奖励天数
	AwardName string `protobuf:"bytes,6,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"` // 奖励包名称
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{29}
}

func (x *RankInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RankInfo) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RankInfo) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RankInfo) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *RankInfo) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

type RespVoiceRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Items   []*RespVoiceRank_Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RespVoiceRank) Reset() {
	*x = RespVoiceRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceRank) ProtoMessage() {}

func (x *RespVoiceRank) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceRank.ProtoReflect.Descriptor instead.
func (*RespVoiceRank) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{30}
}

func (x *RespVoiceRank) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespVoiceRank) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespVoiceRank) GetItems() []*RespVoiceRank_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type AudioBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	PlayStats string `protobuf:"bytes,4,opt,name=play_stats,json=playStats,proto3" json:"play_stats,omitempty"`  // 播放量统计，服务端控制显示规则
	IsCollect bool   `protobuf:"varint,5,opt,name=is_collect,json=isCollect,proto3" json:"is_collect,omitempty"` // 是否收藏
}

func (x *AudioBasic) Reset() {
	*x = AudioBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioBasic) ProtoMessage() {}

func (x *AudioBasic) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioBasic.ProtoReflect.Descriptor instead.
func (*AudioBasic) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{31}
}

func (x *AudioBasic) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AudioBasic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AudioBasic) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AudioBasic) GetPlayStats() string {
	if x != nil {
		return x.PlayStats
	}
	return ""
}

func (x *AudioBasic) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

type RespVoiceRank_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId    uint32 `protobuf:"varint,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`         // 作品id
	AudioTitle string `protobuf:"bytes,2,opt,name=audio_title,json=audioTitle,proto3" json:"audio_title,omitempty"` // 作品标题
	AudioCover string `protobuf:"bytes,3,opt,name=audio_cover,json=audioCover,proto3" json:"audio_cover,omitempty"` // 作品封面
	Uid        uint32 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`                                // 作者uid
	UserIcon   string `protobuf:"bytes,5,opt,name=user_icon,json=userIcon,proto3" json:"user_icon,omitempty"`       // 用户头像
	UserName   string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`       // 用户昵称
	LikeNum    uint32 `protobuf:"varint,7,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`         // 点赞数
}

func (x *RespVoiceRank_Item) Reset() {
	*x = RespVoiceRank_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespVoiceRank_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespVoiceRank_Item) ProtoMessage() {}

func (x *RespVoiceRank_Item) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespVoiceRank_Item.ProtoReflect.Descriptor instead.
func (*RespVoiceRank_Item) Descriptor() ([]byte, []int) {
	return file_voice_lover_proto_rawDescGZIP(), []int{30, 0}
}

func (x *RespVoiceRank_Item) GetAudioId() uint32 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *RespVoiceRank_Item) GetAudioTitle() string {
	if x != nil {
		return x.AudioTitle
	}
	return ""
}

func (x *RespVoiceRank_Item) GetAudioCover() string {
	if x != nil {
		return x.AudioCover
	}
	return ""
}

func (x *RespVoiceRank_Item) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RespVoiceRank_Item) GetUserIcon() string {
	if x != nil {
		return x.UserIcon
	}
	return ""
}

func (x *RespVoiceRank_Item) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RespVoiceRank_Item) GetLikeNum() uint32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

var File_voice_lover_proto protoreflect.FileDescriptor

var file_voice_lover_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc6, 0x02, 0x0a, 0x0e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61,
	0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x22, 0x68, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x4d, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x22, 0x5e, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x72, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x22, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0d, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xdf, 0x01, 0x0a,
	0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x62,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x57, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x70, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x50, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5e, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x69, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x16, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x69, 0x6e,
	0x12, 0x32, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x12, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x66, 0x0a, 0x17, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x74,
	0x65, 0x6e, 0x64, 0x52, 0x08, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x22, 0x41, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xb6, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xca, 0x01, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_lover_proto_rawDescOnce sync.Once
	file_voice_lover_proto_rawDescData = file_voice_lover_proto_rawDesc
)

func file_voice_lover_proto_rawDescGZIP() []byte {
	file_voice_lover_proto_rawDescOnce.Do(func() {
		file_voice_lover_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_lover_proto_rawDescData)
	})
	return file_voice_lover_proto_rawDescData
}

var file_voice_lover_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_voice_lover_proto_goTypes = []interface{}{
	(*VoiceLoverMain)(nil),             // 0: pb.VoiceLoverMain
	(*RespVoiceLoverMain)(nil),         // 1: pb.RespVoiceLoverMain
	(*AlbumList)(nil),                  // 2: pb.AlbumList
	(*RespAlbumList)(nil),              // 3: pb.RespAlbumList
	(*RecUserList)(nil),                // 4: pb.RecUserList
	(*RespRecUserList)(nil),            // 5: pb.RespRecUserList
	(*AlbumDetail)(nil),                // 6: pb.AlbumDetail
	(*RespAlbumDetail)(nil),            // 7: pb.RespAlbumDetail
	(*AlbumComments)(nil),              // 8: pb.AlbumComments
	(*RespAlbumComments)(nil),          // 9: pb.RespAlbumComments
	(*RespCommentAlbum)(nil),           // 10: pb.RespCommentAlbum
	(*AudioDetail)(nil),                // 11: pb.AudioDetail
	(*RespAudioDetail)(nil),            // 12: pb.RespAudioDetail
	(*AudioComments)(nil),              // 13: pb.AudioComments
	(*RespAudioComments)(nil),          // 14: pb.RespAudioComments
	(*RespCommentAudio)(nil),           // 15: pb.RespCommentAudio
	(*RespCollectVoiceLover)(nil),      // 16: pb.RespCollectVoiceLover
	(*CollectAlbumList)(nil),           // 17: pb.CollectAlbumList
	(*RespCollectAlbumList)(nil),       // 18: pb.RespCollectAlbumList
	(*CollectAudioList)(nil),           // 19: pb.CollectAudioList
	(*RespCollectAudioList)(nil),       // 20: pb.RespCollectAudioList
	(*RespVoiceLoverPost)(nil),         // 21: pb.RespVoiceLoverPost
	(*RespPlayStatReport)(nil),         // 22: pb.RespPlayStatReport
	(*RespShareInfo)(nil),              // 23: pb.RespShareInfo
	(*RespVoiceLoverActivityMain)(nil), // 24: pb.RespVoiceLoverActivityMain
	(*VoiceLoverActivityMain)(nil),     // 25: pb.VoiceLoverActivityMain
	(*VoiceLoverActivity)(nil),         // 26: pb.VoiceLoverActivity
	(*VoiceLoverActivityAward)(nil),    // 27: pb.VoiceLoverActivityAward
	(*Pretend)(nil),                    // 28: pb.Pretend
	(*RankInfo)(nil),                   // 29: pb.RankInfo
	(*RespVoiceRank)(nil),              // 30: pb.RespVoiceRank
	(*AudioBasic)(nil),                 // 31: pb.AudioBasic
	(*RespVoiceRank_Item)(nil),         // 32: pb.RespVoiceRank.Item
	(*AlbumData)(nil),                  // 33: pb.AlbumData
	(*BannerData)(nil),                 // 34: pb.BannerData
	(*UserData)(nil),                   // 35: pb.UserData
	(*SubjectData)(nil),                // 36: pb.SubjectData
	(*AudioData)(nil),                  // 37: pb.AudioData
	(*CommentData)(nil),                // 38: pb.CommentData
	(*ShareData)(nil),                  // 39: pb.ShareData
}
var file_voice_lover_proto_depIdxs = []int32{
	33, // 0: pb.VoiceLoverMain.rec_albums:type_name -> pb.AlbumData
	34, // 1: pb.VoiceLoverMain.rec_banners:type_name -> pb.BannerData
	35, // 2: pb.VoiceLoverMain.rec_users:type_name -> pb.UserData
	36, // 3: pb.VoiceLoverMain.rec_subjects:type_name -> pb.SubjectData
	33, // 4: pb.VoiceLoverMain.common_albums:type_name -> pb.AlbumData
	37, // 5: pb.VoiceLoverMain.audios:type_name -> pb.AudioData
	0,  // 6: pb.RespVoiceLoverMain.data:type_name -> pb.VoiceLoverMain
	33, // 7: pb.AlbumList.albums:type_name -> pb.AlbumData
	2,  // 8: pb.RespAlbumList.data:type_name -> pb.AlbumList
	35, // 9: pb.RecUserList.rec_users:type_name -> pb.UserData
	4,  // 10: pb.RespRecUserList.data:type_name -> pb.RecUserList
	33, // 11: pb.AlbumDetail.album:type_name -> pb.AlbumData
	37, // 12: pb.AlbumDetail.audios:type_name -> pb.AudioData
	6,  // 13: pb.RespAlbumDetail.data:type_name -> pb.AlbumDetail
	38, // 14: pb.AlbumComments.comments:type_name -> pb.CommentData
	8,  // 15: pb.RespAlbumComments.data:type_name -> pb.AlbumComments
	37, // 16: pb.AudioDetail.audio:type_name -> pb.AudioData
	33, // 17: pb.AudioDetail.albums:type_name -> pb.AlbumData
	11, // 18: pb.RespAudioDetail.data:type_name -> pb.AudioDetail
	38, // 19: pb.AudioComments.comments:type_name -> pb.CommentData
	13, // 20: pb.RespAudioComments.data:type_name -> pb.AudioComments
	33, // 21: pb.CollectAlbumList.list:type_name -> pb.AlbumData
	17, // 22: pb.RespCollectAlbumList.data:type_name -> pb.CollectAlbumList
	37, // 23: pb.CollectAudioList.list:type_name -> pb.AudioData
	19, // 24: pb.RespCollectAudioList.data:type_name -> pb.CollectAudioList
	39, // 25: pb.RespShareInfo.data:type_name -> pb.ShareData
	25, // 26: pb.RespVoiceLoverActivityMain.data:type_name -> pb.VoiceLoverActivityMain
	26, // 27: pb.VoiceLoverActivityMain.activity:type_name -> pb.VoiceLoverActivity
	27, // 28: pb.VoiceLoverActivityMain.award:type_name -> pb.VoiceLoverActivityAward
	28, // 29: pb.VoiceLoverActivityAward.pretends:type_name -> pb.Pretend
	29, // 30: pb.VoiceLoverActivityAward.ranks:type_name -> pb.RankInfo
	32, // 31: pb.RespVoiceRank.items:type_name -> pb.RespVoiceRank.Item
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_voice_lover_proto_init() }
func file_voice_lover_proto_init() {
	if File_voice_lover_proto != nil {
		return
	}
	file_common_proto_init()
	file_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_lover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceLoverMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespRecUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCommentAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAudioComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCommentAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCollectVoiceLover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCollectAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAudioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCollectAudioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespPlayStatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceLoverActivityMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceLoverActivityMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceLoverActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceLoverActivityAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pretend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespVoiceRank_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_lover_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_lover_proto_goTypes,
		DependencyIndexes: file_voice_lover_proto_depIdxs,
		MessageInfos:      file_voice_lover_proto_msgTypes,
	}.Build()
	File_voice_lover_proto = out.File
	file_voice_lover_proto_rawDesc = nil
	file_voice_lover_proto_goTypes = nil
	file_voice_lover_proto_depIdxs = nil
}
