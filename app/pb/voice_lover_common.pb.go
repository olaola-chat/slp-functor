// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: voice_lover_common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 音频唯一标识
	Title     string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                          // 音频标题
	Resource  string    `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`                    // 音频资源
	Covers    []string  `protobuf:"bytes,4,rep,name=covers,proto3" json:"covers,omitempty"`                        // 音频封面
	Seconds   uint32    `protobuf:"varint,5,opt,name=seconds,proto3" json:"seconds,omitempty"`                     // 音频时长
	PlayStats string    `protobuf:"bytes,6,opt,name=play_stats,json=playStats,proto3" json:"play_stats,omitempty"` // 音频播放次数
	UserInfo  *UserData `protobuf:"bytes,7,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`    // 发布人
}

func (x *AudioData) Reset() {
	*x = AudioData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioData) ProtoMessage() {}

func (x *AudioData) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioData.ProtoReflect.Descriptor instead.
func (*AudioData) Descriptor() ([]byte, []int) {
	return file_voice_lover_common_proto_rawDescGZIP(), []int{0}
}

func (x *AudioData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AudioData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AudioData) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AudioData) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *AudioData) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *AudioData) GetPlayStats() string {
	if x != nil {
		return x.PlayStats
	}
	return ""
}

func (x *AudioData) GetUserInfo() *UserData {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type AlbumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 专辑id
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                              // 专辑标题
	Cover      string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`                              // 专辑显示封面
	AudioTotal uint32 `protobuf:"varint,4,opt,name=audio_total,json=audioTotal,proto3" json:"audio_total,omitempty"` // 专辑内音频数量
	PlayStats  string `protobuf:"bytes,5,opt,name=play_stats,json=playStats,proto3" json:"play_stats,omitempty"`     // 播放量统计，服务端控制显示规则
	IsCollect  bool   `protobuf:"varint,6,opt,name=is_collect,json=isCollect,proto3" json:"is_collect,omitempty"`    // 是否收藏
}

func (x *AlbumData) Reset() {
	*x = AlbumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumData) ProtoMessage() {}

func (x *AlbumData) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumData.ProtoReflect.Descriptor instead.
func (*AlbumData) Descriptor() ([]byte, []int) {
	return file_voice_lover_common_proto_rawDescGZIP(), []int{1}
}

func (x *AlbumData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlbumData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlbumData) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AlbumData) GetAudioTotal() uint32 {
	if x != nil {
		return x.AudioTotal
	}
	return 0
}

func (x *AlbumData) GetPlayStats() string {
	if x != nil {
		return x.PlayStats
	}
	return ""
}

func (x *AlbumData) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

type SubjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // 专题id
	Title      string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`   // 专题名称
	Albums     []*AlbumData `protobuf:"bytes,3,rep,name=albums,proto3" json:"albums,omitempty"` // 专题下专辑列表
	AlbumTotal uint32       `protobuf:"varint,4,opt,name=album_total,json=albumTotal,proto3" json:"album_total,omitempty"`
}

func (x *SubjectData) Reset() {
	*x = SubjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectData) ProtoMessage() {}

func (x *SubjectData) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectData.ProtoReflect.Descriptor instead.
func (*SubjectData) Descriptor() ([]byte, []int) {
	return file_voice_lover_common_proto_rawDescGZIP(), []int{2}
}

func (x *SubjectData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubjectData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectData) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *SubjectData) GetAlbumTotal() uint32 {
	if x != nil {
		return x.AlbumTotal
	}
	return 0
}

type CommentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                            // 评论唯一标识
	UserInfo *UserData `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"` // 评论人信息
	Comment  string    `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`                   // 评论内容
}

func (x *CommentData) Reset() {
	*x = CommentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_lover_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentData) ProtoMessage() {}

func (x *CommentData) ProtoReflect() protoreflect.Message {
	mi := &file_voice_lover_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentData.ProtoReflect.Descriptor instead.
func (*CommentData) Descriptor() ([]byte, []int) {
	return file_voice_lover_common_proto_rawDescGZIP(), []int{3}
}

func (x *CommentData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentData) GetUserInfo() *UserData {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *CommentData) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_voice_lover_common_proto protoreflect.FileDescriptor

var file_voice_lover_common_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a,
	0x09, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x29, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x22, 0x7b, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x62,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70,
	0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_lover_common_proto_rawDescOnce sync.Once
	file_voice_lover_common_proto_rawDescData = file_voice_lover_common_proto_rawDesc
)

func file_voice_lover_common_proto_rawDescGZIP() []byte {
	file_voice_lover_common_proto_rawDescOnce.Do(func() {
		file_voice_lover_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_lover_common_proto_rawDescData)
	})
	return file_voice_lover_common_proto_rawDescData
}

var file_voice_lover_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_voice_lover_common_proto_goTypes = []interface{}{
	(*AudioData)(nil),   // 0: pb.AudioData
	(*AlbumData)(nil),   // 1: pb.AlbumData
	(*SubjectData)(nil), // 2: pb.SubjectData
	(*CommentData)(nil), // 3: pb.CommentData
	(*UserData)(nil),    // 4: pb.UserData
}
var file_voice_lover_common_proto_depIdxs = []int32{
	4, // 0: pb.AudioData.user_info:type_name -> pb.UserData
	1, // 1: pb.SubjectData.albums:type_name -> pb.AlbumData
	4, // 2: pb.CommentData.user_info:type_name -> pb.UserData
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_voice_lover_common_proto_init() }
func file_voice_lover_common_proto_init() {
	if File_voice_lover_common_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_lover_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_lover_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_lover_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_lover_common_proto_goTypes,
		DependencyIndexes: file_voice_lover_common_proto_depIdxs,
		MessageInfos:      file_voice_lover_common_proto_msgTypes,
	}.Build()
	File_voice_lover_common_proto = out.File
	file_voice_lover_common_proto_rawDesc = nil
	file_voice_lover_common_proto_goTypes = nil
	file_voice_lover_common_proto_depIdxs = nil
}
