// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.5
// source: rpc_im.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterCheckMode int32

const (
	FilterCheckMode_common FilterCheckMode = 0
	FilterCheckMode_strict FilterCheckMode = 1
)

// Enum value maps for FilterCheckMode.
var (
	FilterCheckMode_name = map[int32]string{
		0: "common",
		1: "strict",
	}
	FilterCheckMode_value = map[string]int32{
		"common": 0,
		"strict": 1,
	}
)

func (x FilterCheckMode) Enum() *FilterCheckMode {
	p := new(FilterCheckMode)
	*p = x
	return p
}

func (x FilterCheckMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterCheckMode) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_im_proto_enumTypes[0].Descriptor()
}

func (FilterCheckMode) Type() protoreflect.EnumType {
	return &file_rpc_im_proto_enumTypes[0]
}

func (x FilterCheckMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterCheckMode.Descriptor instead.
func (FilterCheckMode) EnumDescriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{0}
}

type FilterReplaceMode int32

const (
	FilterReplaceMode_NoReplace         FilterReplaceMode = 0 //不替换
	FilterReplaceMode_ReplaceWithoutOrg FilterReplaceMode = 1 //不保留替换前匹配项
	FilterReplaceMode_ReplaceWithOrg    FilterReplaceMode = 2 //保留替换前匹配项
)

// Enum value maps for FilterReplaceMode.
var (
	FilterReplaceMode_name = map[int32]string{
		0: "NoReplace",
		1: "ReplaceWithoutOrg",
		2: "ReplaceWithOrg",
	}
	FilterReplaceMode_value = map[string]int32{
		"NoReplace":         0,
		"ReplaceWithoutOrg": 1,
		"ReplaceWithOrg":    2,
	}
)

func (x FilterReplaceMode) Enum() *FilterReplaceMode {
	p := new(FilterReplaceMode)
	*p = x
	return p
}

func (x FilterReplaceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterReplaceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_im_proto_enumTypes[1].Descriptor()
}

func (FilterReplaceMode) Type() protoreflect.EnumType {
	return &file_rpc_im_proto_enumTypes[1]
}

func (x FilterReplaceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterReplaceMode.Descriptor instead.
func (FilterReplaceMode) EnumDescriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{1}
}

type FilterAppType int32

const (
	FilterAppType_default  FilterAppType = 0   //
	FilterAppType_slp      FilterAppType = 1   //彩虹星球
	FilterAppType_teammate FilterAppType = 2   //皮队友
	FilterAppType_who      FilterAppType = 3   //凶手
	FilterAppType_happy    FilterAppType = 4   //开心玩
	FilterAppType_overseas FilterAppType = 5   //海外
	FilterAppType_push     FilterAppType = 6   //新冲鸭
	FilterAppType_bbIm     FilterAppType = 127 //自研im
)

// Enum value maps for FilterAppType.
var (
	FilterAppType_name = map[int32]string{
		0:   "default",
		1:   "slp",
		2:   "teammate",
		3:   "who",
		4:   "happy",
		5:   "overseas",
		6:   "push",
		127: "bbIm",
	}
	FilterAppType_value = map[string]int32{
		"default":  0,
		"slp":      1,
		"teammate": 2,
		"who":      3,
		"happy":    4,
		"overseas": 5,
		"push":     6,
		"bbIm":     127,
	}
)

func (x FilterAppType) Enum() *FilterAppType {
	p := new(FilterAppType)
	*p = x
	return p
}

func (x FilterAppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterAppType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_im_proto_enumTypes[2].Descriptor()
}

func (FilterAppType) Type() protoreflect.EnumType {
	return &file_rpc_im_proto_enumTypes[2]
}

func (x FilterAppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterAppType.Descriptor instead.
func (FilterAppType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{2}
}

type FilterOpType int32

const (
	FilterOpType_OpGe FilterOpType = 0
	FilterOpType_OpEq FilterOpType = 1
	FilterOpType_OpLe FilterOpType = 2
)

// Enum value maps for FilterOpType.
var (
	FilterOpType_name = map[int32]string{
		0: "OpGe",
		1: "OpEq",
		2: "OpLe",
	}
	FilterOpType_value = map[string]int32{
		"OpGe": 0,
		"OpEq": 1,
		"OpLe": 2,
	}
)

func (x FilterOpType) Enum() *FilterOpType {
	p := new(FilterOpType)
	*p = x
	return p
}

func (x FilterOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_im_proto_enumTypes[3].Descriptor()
}

func (FilterOpType) Type() protoreflect.EnumType {
	return &file_rpc_im_proto_enumTypes[3]
}

func (x FilterOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOpType.Descriptor instead.
func (FilterOpType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{3}
}

type FilterVagueMode int32

const (
	FilterVagueMode_close FilterVagueMode = 0
	FilterVagueMode_open  FilterVagueMode = 1
)

// Enum value maps for FilterVagueMode.
var (
	FilterVagueMode_name = map[int32]string{
		0: "close",
		1: "open",
	}
	FilterVagueMode_value = map[string]int32{
		"close": 0,
		"open":  1,
	}
)

func (x FilterVagueMode) Enum() *FilterVagueMode {
	p := new(FilterVagueMode)
	*p = x
	return p
}

func (x FilterVagueMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterVagueMode) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_im_proto_enumTypes[4].Descriptor()
}

func (FilterVagueMode) Type() protoreflect.EnumType {
	return &file_rpc_im_proto_enumTypes[4]
}

func (x FilterVagueMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterVagueMode.Descriptor instead.
func (FilterVagueMode) EnumDescriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{4}
}

type ReqCheckDirty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       string            `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Condition string            `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`                                     //敏感词场景,可选 默认全部
	Type      FilterCheckMode   `protobuf:"varint,3,opt,name=type,proto3,enum=pb.FilterCheckMode" json:"type,omitempty"`                      //可选 默认普通模式
	Replace   FilterReplaceMode `protobuf:"varint,4,opt,name=replace,proto3,enum=pb.FilterReplaceMode" json:"replace,omitempty"`              //可选 默认不进行替换
	App       FilterAppType     `protobuf:"varint,5,opt,name=app,proto3,enum=pb.FilterAppType" json:"app,omitempty"`                          //可选
	Danger    int32             `protobuf:"varint,6,opt,name=danger,proto3" json:"danger,omitempty"`                                          //危险等级
	DangerOp  FilterOpType      `protobuf:"varint,7,opt,name=danger_op,json=dangerOp,proto3,enum=pb.FilterOpType" json:"danger_op,omitempty"` //危险等级匹配方式
}

func (x *ReqCheckDirty) Reset() {
	*x = ReqCheckDirty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCheckDirty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCheckDirty) ProtoMessage() {}

func (x *ReqCheckDirty) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCheckDirty.ProtoReflect.Descriptor instead.
func (*ReqCheckDirty) Descriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{0}
}

func (x *ReqCheckDirty) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ReqCheckDirty) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *ReqCheckDirty) GetType() FilterCheckMode {
	if x != nil {
		return x.Type
	}
	return FilterCheckMode_common
}

func (x *ReqCheckDirty) GetReplace() FilterReplaceMode {
	if x != nil {
		return x.Replace
	}
	return FilterReplaceMode_NoReplace
}

func (x *ReqCheckDirty) GetApp() FilterAppType {
	if x != nil {
		return x.App
	}
	return FilterAppType_default
}

func (x *ReqCheckDirty) GetDanger() int32 {
	if x != nil {
		return x.Danger
	}
	return 0
}

func (x *ReqCheckDirty) GetDangerOp() FilterOpType {
	if x != nil {
		return x.DangerOp
	}
	return FilterOpType_OpGe
}

type RepCheckDirty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` //是否成功
	Error   string               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      //错误原因
	Reasons []*FilterDirtyReason `protobuf:"bytes,3,rep,name=reasons,proto3" json:"reasons,omitempty"`
}

func (x *RepCheckDirty) Reset() {
	*x = RepCheckDirty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepCheckDirty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepCheckDirty) ProtoMessage() {}

func (x *RepCheckDirty) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepCheckDirty.ProtoReflect.Descriptor instead.
func (*RepCheckDirty) Descriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{1}
}

func (x *RepCheckDirty) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RepCheckDirty) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RepCheckDirty) GetReasons() []*FilterDirtyReason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type FilterDirtyReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                            //敏感词类型
	Text     string          `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                            //敏感词
	Cond     string          `protobuf:"bytes,3,opt,name=cond,proto3" json:"cond,omitempty"`                            //敏感词场景
	Reason   string          `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                        //原因
	Danger   int32           `protobuf:"varint,5,opt,name=danger,proto3" json:"danger,omitempty"`                       //危险等级
	Dateline int32           `protobuf:"varint,6,opt,name=dateline,proto3" json:"dateline,omitempty"`                   //修改时间戳
	Vague    FilterVagueMode `protobuf:"varint,7,opt,name=vague,proto3,enum=pb.FilterVagueMode" json:"vague,omitempty"` //是否开启拼音匹配
	Delete   int32           `protobuf:"varint,8,opt,name=delete,proto3" json:"delete,omitempty"`                       //是否删除
	App      FilterAppType   `protobuf:"varint,9,opt,name=app,proto3,enum=pb.FilterAppType" json:"app,omitempty"`       //app名称
	SubType  string          `protobuf:"bytes,10,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`      //二级分类
}

func (x *FilterDirtyReason) Reset() {
	*x = FilterDirtyReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDirtyReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDirtyReason) ProtoMessage() {}

func (x *FilterDirtyReason) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDirtyReason.ProtoReflect.Descriptor instead.
func (*FilterDirtyReason) Descriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{2}
}

func (x *FilterDirtyReason) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilterDirtyReason) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FilterDirtyReason) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *FilterDirtyReason) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FilterDirtyReason) GetDanger() int32 {
	if x != nil {
		return x.Danger
	}
	return 0
}

func (x *FilterDirtyReason) GetDateline() int32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *FilterDirtyReason) GetVague() FilterVagueMode {
	if x != nil {
		return x.Vague
	}
	return FilterVagueMode_close
}

func (x *FilterDirtyReason) GetDelete() int32 {
	if x != nil {
		return x.Delete
	}
	return 0
}

func (x *FilterDirtyReason) GetApp() FilterAppType {
	if x != nil {
		return x.App
	}
	return FilterAppType_default
}

func (x *FilterDirtyReason) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

// 返回IM消息是否成功
type RepUserImSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RepUserImSync) Reset() {
	*x = RepUserImSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepUserImSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepUserImSync) ProtoMessage() {}

func (x *RepUserImSync) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepUserImSync.ProtoReflect.Descriptor instead.
func (*RepUserImSync) Descriptor() ([]byte, []int) {
	return file_rpc_im_proto_rawDescGZIP(), []int{3}
}

func (x *RepUserImSync) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

var File_rpc_im_proto protoreflect.FileDescriptor

var file_rpc_im_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x85, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x69, 0x72, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x64,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x22, 0x70, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x72, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x72, 0x74, 0x79, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x9e, 0x02, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x72, 0x74, 0x79, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61,
	0x67, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x67, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x67, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a,
	0x0d, 0x52, 0x65, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x2a, 0x29, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x10, 0x01, 0x2a, 0x4d, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x4f, 0x72, 0x67, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x72, 0x67, 0x10, 0x02, 0x2a, 0x69, 0x0a, 0x0d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x6c,
	0x70, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x68, 0x61,
	0x70, 0x70, 0x79, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61,
	0x73, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x10, 0x06, 0x12, 0x08, 0x0a,
	0x04, 0x62, 0x62, 0x49, 0x6d, 0x10, 0x7f, 0x2a, 0x2c, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x47, 0x65, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x45, 0x71, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f,
	0x70, 0x4c, 0x65, 0x10, 0x02, 0x2a, 0x26, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x67, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x01, 0x42, 0x0b, 0x5a,
	0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rpc_im_proto_rawDescOnce sync.Once
	file_rpc_im_proto_rawDescData = file_rpc_im_proto_rawDesc
)

func file_rpc_im_proto_rawDescGZIP() []byte {
	file_rpc_im_proto_rawDescOnce.Do(func() {
		file_rpc_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_im_proto_rawDescData)
	})
	return file_rpc_im_proto_rawDescData
}

var file_rpc_im_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_rpc_im_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_im_proto_goTypes = []interface{}{
	(FilterCheckMode)(0),      // 0: pb.FilterCheckMode
	(FilterReplaceMode)(0),    // 1: pb.FilterReplaceMode
	(FilterAppType)(0),        // 2: pb.FilterAppType
	(FilterOpType)(0),         // 3: pb.FilterOpType
	(FilterVagueMode)(0),      // 4: pb.FilterVagueMode
	(*ReqCheckDirty)(nil),     // 5: pb.ReqCheckDirty
	(*RepCheckDirty)(nil),     // 6: pb.RepCheckDirty
	(*FilterDirtyReason)(nil), // 7: pb.FilterDirtyReason
	(*RepUserImSync)(nil),     // 8: pb.RepUserImSync
}
var file_rpc_im_proto_depIdxs = []int32{
	0, // 0: pb.ReqCheckDirty.type:type_name -> pb.FilterCheckMode
	1, // 1: pb.ReqCheckDirty.replace:type_name -> pb.FilterReplaceMode
	2, // 2: pb.ReqCheckDirty.app:type_name -> pb.FilterAppType
	3, // 3: pb.ReqCheckDirty.danger_op:type_name -> pb.FilterOpType
	7, // 4: pb.RepCheckDirty.reasons:type_name -> pb.FilterDirtyReason
	4, // 5: pb.FilterDirtyReason.vague:type_name -> pb.FilterVagueMode
	2, // 6: pb.FilterDirtyReason.app:type_name -> pb.FilterAppType
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_rpc_im_proto_init() }
func file_rpc_im_proto_init() {
	if File_rpc_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCheckDirty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepCheckDirty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDirtyReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepUserImSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_im_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_im_proto_goTypes,
		DependencyIndexes: file_rpc_im_proto_depIdxs,
		EnumInfos:         file_rpc_im_proto_enumTypes,
		MessageInfos:      file_rpc_im_proto_msgTypes,
	}.Build()
	File_rpc_im_proto = out.File
	file_rpc_im_proto_rawDesc = nil
	file_rpc_im_proto_goTypes = nil
	file_rpc_im_proto_depIdxs = nil
}
