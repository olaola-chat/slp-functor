{{- if $.Values.systemInfoReport.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: slp-cmd-systeminfo-report
  namespace: {{ $.Release.Namespace }}
  labels:
    # topology.kubernetes.io/zone: hangzhou-J
    beta.kubernetes.io/os: linux
    k8s.slp.com/cluster: slp
    k8s.slp.com/repository: app
    k8s.slp.com/serverMode: cmd
    k8s.slp.com/cmdName: systeminfo
    k8s.slp.com/cmdAction: report
    k8s.slp.com/app: slp-app-cmd
spec:
  selector:
    matchLabels:
      k8s.slp.com/serverMode: cmd
  template:
    metadata:
      name: slp-cmd-systeminfo-report
      namespace: {{ $.Release.Namespace }}
      labels:
        k8s.slp.com/serverMode: cmd
    spec:
      restartPolicy: Always
      preemptionPolicy: {{ $.Values.systemInfoReport.priorityClassName | default "Never"}}
      terminationGracePeriodSeconds: {{ $.Values.systemInfoReport.periodSeconds | default 15 }}
      containers:
        - name: {{ $.Values.systemInfoReport.name }}
          image: {{ $.Values.systemInfoReport.image.repository }}:{{ $.Values.systemInfoReport.image.tag }}
          imagePullPolicy: {{ $.Values.systemInfoReport.image.pullPolicy }}
          resources:
            {{- toYaml $.Values.systemInfoReport.resources | nindent 12 }}
          #command: ["/bin/sh", "-c", "sleep 1000000"]
          command: ["bin/slp-app-cmd"]
          args:
            - "--name=systemInfo"
            - "--action=Report"
            - "--gf.gcfg.file=gf.gcfg.file.toml"
          {{- if $.Values.systemInfoReport.livenessProbe.enabled}}
          livenessProbe:
            httpGet:
              port: 8080
              path: /ping
            initialDelaySeconds: {{ $.Values.systemInfoReport.livenessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.systemInfoReport.livenessProbe.periodSeconds | default 5}}
            timeoutSeconds: {{ .Values.systemInfoReport.livenessProbe.timeoutSeconds | default 5}}
            failureThreshold: {{ .Values.systemInfoReport.livenessProbe.failureThreshold | default 3 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CONSUL_AGENT_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: PROBE_PORT
              value: "8080"
          volumeMounts:
            - name: "gf-gcfg-file"
              mountPath: "/home/ecs-user/webroot/slp-go/config/gf.gcfg.file.toml"
              subPath: "gf.gcfg.file.toml"

      {{- if .Values.systemInfoReport.imagePullSecrets.enabled }}
      imagePullSecrets:
        {{- toYaml $.Values.systemInfoReport.imagePullSecrets.secrets | nindent 8 }}
      {{- end }}
      volumes:
        - name: gf-gcfg-file
          configMap:
            name: {{ $.Values.gfConfigMap.name }}
  {{- end }}